{"version":3,"file":"static/js/950.194495ac.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/Visibility.js","../node_modules/@mui/icons-material/esm/VisibilityOff.js","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');","import React , { useCallback, useState } from 'react';\nimport { useDispatch } from 'react-redux'\nimport { Formik } from 'formik'\nimport { Btn, Button , Container, Logotype, Icon, FormaRegistration, Label,Error} from \"./LoginForm.styled\";\nimport {login} from '../../redux/auth/auth-operations'\nimport { loginSchema } from '../../utils/validationsSchemas'\nimport sprite from '../../images/svg/sprite.svg'\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\nimport { IconButton, InputAdornment, TextField } from '@mui/material';\n\n\n\nconst LoginForm = () => {\n  \n  const [showPassword, setShowPassword] = useState(false);\n  const dispatch = useDispatch();\n   const handleSubmit = ({ email, password }) => {\n     dispatch(login({ email, password }));\n   };\n  // const tooglePassword = () => { setShowPassword(!showPassword) }\n\n  const tooglePassword = useCallback(() => {\n    setShowPassword(prevShowPassword => !prevShowPassword);\n  }, []);\n  const handleMouseDownPassword = e => {\n    e.preventDefault();\n  }\n\n  return (\n    <div>\n      <Container>\n        <Logotype>\n          <Icon>\n            <use href={`${sprite}#icon-logo`}></use>\n          </Icon>\n        </Logotype>\n\n        <Formik\n         initialValues={{\n          password: \"\",\n          email: \"\",\n        }}\n        validateOnBlur\n        onSubmit={(values, { resetForm }) => {\n          handleSubmit(values);\n          resetForm();\n        }}\n        validationSchema={loginSchema}\n      >\n          {({\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            isValid,\n            handleSubmit,\n            dirty,\n          }) => (\n            <FormaRegistration>\n              <Label>\n                {touched.email && errors.email && (\n                 <Error>{errors.email}</Error>\n               )}\n                <TextField\n                 variant=\"filled\"\n              margin=\"normal\"\n              required\n              fullWidth\n              label=\"E-mail\"\n                type={`email`}\n                  name={`email`}\n                  size=\"small\"\n              autoComplete=\"email\"\n              color=\"primary\"\n              autoFocus\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.email}\n                />\n\n                {/* <Inputicon width=\"24\" height=\"24\">\n                  <use href={`${sprite}#icon-email`}></use>\n                </Inputicon> */}\n              </Label>\n\n              <Label>\n                {touched.password && errors.password && (\n                <Error>{errors.password}</Error>\n              )}\n                <TextField\n                placeholder=\"Password\"\n                type={showPassword ? 'text' : 'password'}\n                  name={`password`}\n                  label=\"Password\"\n              required\n              fullWidth\n              variant=\"filled\"\n              margin=\"normal\"\n              size=\"small\"\n              autoComplete=\"current-password\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                  value={values.password}\n                  InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={tooglePassword}\n                      onMouseDown={handleMouseDownPassword}\n                    >\n                      {showPassword ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n                />\n\n                {/* <Inputicon width=\"24\" height=\"24\">\n                  <use href={`${sprite}#icon-password`}></use>\n                </Inputicon> */}\n              </Label>\n              <Btn\n                disabled={!isValid || !dirty}\n                type={`submit`}>\n                LOG IN\n              </Btn>\n            \n              <Button\n                to=\"/register\"\n                style={{ textDecoration: \"none\" }}>\n                REGISTER\n              </Button>\n            </FormaRegistration>\n          )}\n        </Formik>\n      </Container>\n    </div>\n  )\n}\n\nexport default LoginForm\n\n\n\n\n\n\n\n\n\n\n","import React from 'react'\nimport Media from 'react-media'\nimport LoginForm from '../../components/LoginForm/LoginForm'\nimport { Title, WrapperImg, FormLogin, Img, Container } from './LoginPage.styled'\nimport { mediaQueries } from '../../utils'\nimport signinImg from '../../images/photo/signin-img.png'\nimport PageContainer from 'components/PageContainer/PageContainer'\n\nconst LoginPage = () => {\n  return (\n    <PageContainer>\n      <Container>\n        <Media queries={mediaQueries}>\n          {(matches) => (\n            <>\n              {matches.tablet && (\n                <WrapperImg>\n                  <Img\n                    src={signinImg}\n                    alt=\"a man with a shopping cart\"\n                  ></Img>  \n                  <Title>Finance App</Title>\n                </WrapperImg>\n              )}\n              {matches.desktop && (\n                <WrapperImg>\n                  <Img\n                    src={signinImg}\n                    alt=\"A man with a cart of groceries\"\n                  ></Img>  \n                  <Title>Finance App</Title>\n                </WrapperImg>\n              )}\n            </>\n          )}\n        </Media>\n\n        <FormLogin >\n          <LoginForm />\n        </FormLogin>\n      </Container>\n    </PageContainer>\n  )\n}\n\nexport default LoginPage"],"names":["createSvgIcon","_jsx","d","useState","showPassword","setShowPassword","dispatch","useDispatch","tooglePassword","useCallback","prevShowPassword","handleMouseDownPassword","e","preventDefault","href","sprite","initialValues","password","email","validateOnBlur","onSubmit","values","resetForm","login","handleSubmit","validationSchema","loginSchema","errors","touched","handleChange","handleBlur","isValid","dirty","TextField","variant","margin","required","fullWidth","label","type","name","size","autoComplete","color","autoFocus","onChange","onBlur","value","placeholder","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","Visibility","VisibilityOff","disabled","to","style","textDecoration","PageContainer","queries","mediaQueries","matches","tablet","src","signinImg","alt","desktop"],"sourceRoot":""}