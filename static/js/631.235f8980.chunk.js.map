{"version":3,"file":"static/js/631.235f8980.chunk.js","mappings":"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","sources":["pages/RegisterPage/RegisterPage.styled.js","components/RegisterForm/PasswordStrength.styled.js","components/RegisterForm/PasswordStrength.jsx","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const RegisterImg = styled.div`\n  @media screen and (min-width: 768px) {\n    display: flex;\n    justify-content: space-evenly;\n    align-items: center;\n    margin-bottom: 50px;\n  }\n  @media screen and (min-width: 1280px) {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 0;\n  }\n`;\n\nexport const Title = styled.p`\n  position: absolute;\n  right: 30px;\n  top: 163px;\n  font-family: Poppins;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 30px;\n  line-height: 1.5;\n  color: #000000;\n  @media screen and (min-width: 1280px) {\n    position: absolute;\n    top: 590px;\n    left: 200px;\n  }\n`;\n\nexport const Tittle = styled.p`\n  position: absolute;\n  right: 60px;\n  font-family: Poppins;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 30px;\n  line-height: 1.5;\n  color: #000000;\n  display: inline-block;\n  @media screen and (min-width: 1280px) {\n    position: absolute;\n    top: 585px;\n    left: 200px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Progress = styled.div`\n  background-color: rgb(224, 224, 224);\n  width: 100%;\n  height: 4px;\n  border-radius: 15px;\n  transition: all 0.5s linear;\n`;\nexport const ProgressBar = styled.div`\n  margin-bottom: auto;\n  @media screen and(max - width: 767px) {\n    margin-left: 10px;\n  }\n`;\nexport const Text = styled.p`\n  font-size: 12px;\n  text-align: end;\n  color: #ff6596;\n`;\n","import React from 'react'\nimport zxcvbn from 'zxcvbn'\nimport { Progress, Text, ProgressBar } from './PasswordStrength.styled'\n\nconst PasswordStrength = ({ password }) => {\n  const testResult = zxcvbn(password)\n  const num = (testResult.score * 100) / 4\n\n  const funcProgressColor = () => {\n    switch (testResult.score) {\n      case 0:\n        return '#E0E0E0'\n      case 1:\n        return 'red'\n      case 2:\n        return 'orange'\n      case 3:\n        return '#24CCA7'\n      case 4:\n        return '#24CCA7'\n      default:\n        return 'none'\n    }\n  }\n\n  const createPasswordLabel = () => {\n    switch (testResult.score) {\n      case 0:\n        return 'Use a strong password'\n      case 1:\n        return 'Easy password'\n      case 2:\n        return 'Normal password'\n      case 3:\n        return 'A good password'\n      case 4:\n        return 'Safe password!'\n      default:\n        return ''\n    }\n  }\n  const changePasswordColor = () => ({\n    width: `${num}%`,\n    background: funcProgressColor(),\n    height: '7px',\n  })\n  return (\n    <ProgressBar>\n      <Progress style={{ height: '7px' }}>\n        <Progress style={changePasswordColor()}></Progress>\n      </Progress>\n      <Text >\n        {createPasswordLabel()}\n      </Text>\n    </ProgressBar>\n  )\n}\n\nexport default PasswordStrength\n","import  React, { useCallback, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport PasswordStrength from './PasswordStrength'\nimport { Btn, Button , Container, Logotype, Icon, FormaRegistration,Error,Label} from \"../LoginForm/LoginForm.styled\";\nimport { signup } from '../../redux/auth/auth-operations'\nimport { Formik } from 'formik'\nimport { singupSchema } from '../../utils'\nimport sprite from '../../images/svg/sprite.svg'\nimport Visibility from '@mui/icons-material/Visibility';\nimport  VisibilityOff  from '@mui/icons-material/VisibilityOff';\nimport { IconButton, InputAdornment, TextField } from '@mui/material';\n\n\n\nconst RegisterForm = () => {\n  const initialValues = {\n    name: \"\",\n          password: \"\",\n           confirmPassword: \"\",\n           email: \"\",\n  }\n  \n  const [showPassword, setShowPassword] = useState(false);\n  const dispatch = useDispatch();\n    const handleSubmit = ({ name, email, password }) => {\n    \n     dispatch(signup({ name, email, password }));\n    };\n  //const tooglePassword = () => { setShowPassword(!showPassword) }\n  const tooglePassword = useCallback(() => {\n    setShowPassword(prevShowPassword => !prevShowPassword);\n  }, []);\n  const handleMouseDownPassword = e => {\n    e.preventDefault();\n  }\n  \n  return (\n    <Container>\n      <Logotype>\n        <Icon>\n          <use href={`${sprite}#icon-logo`}></use>\n        </Icon>\n      </Logotype>\n\n      <Formik\n        initialValues={initialValues}\n        validateOnBlur\n        onSubmit={(values, { resetForm }) => {\n          handleSubmit(values);\n          resetForm();\n        }}\n        validationSchema={singupSchema}\n        validateOnChange={false}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          isValid,\n          dirty,\n        }) => (\n          <FormaRegistration>\n            <Label>\n               {touched.email && errors.email && (\n                 <Error>{errors.email}</Error>\n            )}\n              <TextField\n                type=\"email\"\n                name=\"email\"\n                variant=\"filled\"\n              margin=\"normal\"\n              required\n              fullWidth\n                label=\"E-mail\"\n                size=\"small\"\n              autoComplete=\"email\"\n              color=\"primary\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.email}\n              />\n              {/* <Inputicon width=\"24\" height=\"24\">\n                <use href={`${sprite}#icon-email`}></use>\n              </Inputicon> */}\n              \n            </Label>\n            <Label>\n              {touched.password && errors.password && (\n                <Error>{errors.password}</Error>\n              )}\n              <TextField\n                type={showPassword ? 'text' : 'password'}\n                label=\"Password\"\n                name=\"password\"\n                fullWidth\n              variant=\"filled\"\n              margin=\"normal\"\n              size=\"small\"\n              autoComplete=\"current-password\"\n                color=\"primary\"\n                required\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.password}\n                InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={tooglePassword}\n                      onMouseDown={handleMouseDownPassword}\n                    >\n                      {showPassword ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n              />\n              {/* <Inputicon width=\"24\" height=\"24\">\n                <use href={`${sprite}#icon-password`}></use>\n              </Inputicon> */}\n            </Label>\n\n            <Label>\n              {touched.confirmPassword && errors.confirmPassword && (\n                 <Error>{errors.confirmPassword}</Error>\n              )}\n              <TextField\n                label=\"Confirm password\"\n                type={showPassword ? 'text' : 'password'}\n                name=\"confirmPassword\"\n                fullWidth\n              variant=\"filled\"\n              margin=\"normal\"\n                size=\"small\"\n                required\n              autoComplete=\"current-password\"\n              color=\"primary\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={tooglePassword}\n                      onMouseDown={handleMouseDownPassword}\n                    >\n                      {showPassword ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n                value={values.confirmPassword}\n                style={{ marginBottom: \"5px\" }}\n              />\n              {/* <Inputicon width=\"24\" height=\"24\" >\n                <use href={`${sprite}#icon-password`}></use>\n              </Inputicon> */}\n            </Label>\n\n            <PasswordStrength password={values.password} />\n            <label>\n              {touched.name && errors.name && (\n                <Error >{errors.name}</Error>\n              )}\n              <TextField\n                label=\"First name\"\n                type=\"text\"\n                name=\"name\"\n                required\n              fullWidth\n              autoComplete=\"name\"\n              autoFocus\n              variant=\"filled\"\n              margin=\"normal\"\n              color=\"primary\"\n              size=\"small\"\n                 onChange={handleChange}\n                 onBlur={handleBlur}\n                value={values.name}\n              />\n              {/* <Inputicon width=\"24\" height=\"24\">\n                <use href={`${sprite}#icon-account`}></use>\n              </Inputicon> */}\n            </label>\n            <Btn\n              disabled={!isValid || !dirty}\n              type=\"submit\"\n            >\n              REGISTER\n            </Btn>\n            <Button\n              to=\"/login\"\n              style={{ textDecoration: \"none\" }}\n            >\n              LOG IN\n            </Button>\n          </FormaRegistration>\n        )}\n      </Formik>\n    </Container>\n  )\n}\n\nexport default RegisterForm\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n ","import { Container, Img, FormLogin, Title} from \"pages/LoginPage/LoginPage.styled\";\nimport { RegisterImg } from \"./RegisterPage.styled\";\nimport Media from 'react-media'\nimport { mediaQueries } from '../../utils'\nimport  RegisterForm  from '../../components/RegisterForm/RegisterForm';\nimport registerimg from '../../images/photo/register-img.png'\nimport PageContainer from '../../components/PageContainer/PageContainer'\n\nconst RegisterPage = () => {\n  return (\n    <PageContainer>\n      <Container>\n         <Media queries={mediaQueries}>\n          {(matches) => (\n            <>\n              {matches.tablet && (\n                <RegisterImg>\n                  <Img\n                    src={registerimg}\n                    alt=\"a girl with a phone\"\n                    width=\"274px\"\n                    height=\"250px\"\n                  />\n                  \n                  \n                  <Title>Finance App</Title>\n               </RegisterImg>\n              )}\n              {matches.desktop && (\n                <RegisterImg>\n                  <Img\n                    src={registerimg}\n                    alt=\"a girl with a phone\"\n                    width=\"452px\"\n                    height=\"413px\"\n                  />\n                  \n                  <Title>Finance App</Title>\n                </RegisterImg>\n              )}\n            </>\n          )}\n        </Media>\n        \n        \n        <FormLogin>\n          <RegisterForm />\n        </FormLogin>\n      </Container>\n      </PageContainer>\n  )\n}\n\nexport default RegisterPage;"],"names":["RegisterImg","styled","Progress","ProgressBar","Text","password","testResult","zxcvbn","num","score","funcProgressColor","style","height","width","background","createPasswordLabel","useState","showPassword","setShowPassword","dispatch","useDispatch","tooglePassword","useCallback","prevShowPassword","handleMouseDownPassword","e","preventDefault","href","sprite","initialValues","name","confirmPassword","email","validateOnBlur","onSubmit","values","resetForm","signup","handleSubmit","validationSchema","singupSchema","validateOnChange","errors","touched","handleChange","handleBlur","isValid","dirty","TextField","type","variant","margin","required","fullWidth","label","size","autoComplete","color","onChange","onBlur","value","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","Visibility","VisibilityOff","marginBottom","autoFocus","disabled","to","textDecoration","PageContainer","queries","mediaQueries","matches","tablet","src","registerimg","alt","desktop"],"sourceRoot":""}