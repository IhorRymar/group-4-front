{"version":3,"file":"static/js/798.e40ec3cf.chunk.js","mappings":"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","sources":["components/HomeTab/EmptyContainer/EmptyContainer.jsx","components/HomeTab/categories.jsx","components/ModalEdit/ModalEdit.styled.jsx","components/AddTransactionForm/AddTransactionForm.styled.jsx","components/AddTransactionForm/Comment/Comment.styled.jsx","components/AddTransactionForm/Comment/Comment.jsx","components/AddTransactionForm/DatePicker/DatePicker.styled.js","components/AddTransactionForm/DatePicker/DatePicker.js","components/AddTransactionForm/CategorySelect/CategorySelect.styled.jsx","redux/categories/categories-selector.js","components/AddTransactionForm/CategorySelect/CategorySelect.js","components/ModalEdit/ModalEditForm.jsx","components/ModalAddTransaction/CloseButton/CloseButton.styled.jsx","components/ModalAddTransaction/CloseButton/CloseButton.jsx","components/ModalEdit/ModalEdit.jsx","components/HomeTab/MobileCard/MobileCard.jsx","components/HomeTab/TabletTab/TabletTab.jsx","components/ButtonCircle/ButtonCircle.styled.jsx","components/ButtonCircle/ButtonCircle.jsx","components/AddTransactionForm/AddTransactionForm.jsx","components/ModalAddTransaction/ModalAddTransaction.jsx","redux/transactions/transactions-selector.js","components/HomeTab/columns.js","components/HomeTab/HomeTab.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport baseVars from \"stylesheet/vars\";\n\nexport const EmptyContainer = () => { \n    return (\n        <Container>\n            <Text>No transactions</Text>\n        </Container>\n    )\n}\nconst Container = styled.div`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nmargin: 0 auto;\nbackground-color: transparent;\n/* border: 1px solid #DCDCDF; */\n@media screen and (min-width: ${baseVars.sizeScreen.mobile}) {\n    width:280px;\n    height:282px;}\n@media screen and (min-width: ${baseVars.sizeScreen.tablet}) {\n   width:704px;\n  height:312px;\n  }\n@media screen and (min-width: ${baseVars.sizeScreen.desktop}) {\n  width: 715px;\n  }\n`;\nconst Text = styled.p`\n   font-family: ${ baseVars.fonts.main};\nfont-style: normal;\nfont-weight: 700;\nfont-size: 30px;\nline-height: 18px;\ncolor: #DCDCDF; \n`;\n","export const Categories = id => {\n  switch (id) {\n    case 0:\n      return  \"Main expenses\";\n    case 1:\n      return \"Products\";\n     case 2:\n      return \"Car\";\n    case 3:\n      return \"Self care\";\n     case 4:\n      return \"Child care\";\n    case 5:\n      return \"Household products\";\n     case 6:\n      return \"Education\";\n    case 7:\n      return \"Leisure\";\n     case 8:\n      return \"Entertainment\";\n    case 9:\n      return \"Help UA Armed Force\";\n    case 999:\n      return \"Other expenses\";\n    default:\n      return \"---\";\n  }\n};\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: ${p => p.theme.color.overlayBg};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const ModalWindow = styled.div`\n  @media screen and (max-width: 767px) {\n    width: 320px;\n    padding: 20px;\n    background-color: ${p => p.theme.color.modalWindowBg};\n  }\n  position: relative;\n  width: 540px;\n  border-radius: ${p => p.theme.radii.modalWindow};\n  padding: 73px;\n  background-color: ${p => p.theme.color.modalWindowBg};\n`;\n","import styled from 'styled-components';\n\nimport { Field, Form } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  label > input {\n    margin-bottom: 40px;\n  }\n`;\n\nexport const CheckboxContainter = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  min-height: 44px;\n  transform: translate(-50%, -50%);\n  margin-top: 40px;\n  left: 50%;\n`;\n\nexport const CheckboxField = styled.input`\n  appearance: none;\n  width: 80px;\n  height: 40px;\n  background-color: ${p => p.theme.color.switcherBgUncheked};\n  position: relative;\n  border-radius: ${p => p.theme.radii.switcherBg};\n  transition: 0.3s;\n  cursor: pointer;\n  border: ${p => p.theme.borderStyles.underline};\n  outline: none;\n\n  :before {\n    content: '+';\n    position: absolute;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: ${p => p.theme.buttons.primary.bg};\n    width: 44px;\n    height: 44px;\n    border-radius: ${p => p.theme.radii.broderSwitcher};\n    outline: none;\n    border: ${p => p.theme.borders.borderNone};\n    color: ${p => p.theme.buttons.primary.color};\n    font-size: ${p => p.theme.fontSizes[0]};\n    left: -4px;\n    top: -2px;\n    transition: 0.6s;\n    filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\n  }\n\n  :checked {\n    background-color: ${p => p.theme.color.muted};\n\n    :before {\n      content: '-';\n      background-color: ${p => p.theme.color.expense};\n      box-shadow: ${p => p.theme.shadows.switcherShadow};\n      left: 40px;\n    }\n  }\n`;\n\nexport const TextField = styled(Field)`\n  border: ${p => p.theme.borders.borderNone};\n  border-bottom: ${p => p.theme.borderStyles.underline};\n  width: 100%;\n  padding-left: 14px;\n  padding-right: 14px;\n  padding-bottom: 8px;\n  outline: none;\n  font-size: ${p => p.theme.fontSizes[1]};\n  font-weight: ${p => p.theme.fontWeights.normal};\n  font-family: ${p => p.theme.fonts.textField};\n\n  ::placeholder {\n    color: ${p => p.theme.color.muted};\n    font-family: ${p => p.theme.fonts.placeholder};\n    font-weight: ${p => p.theme.fontWeights.normal};\n    font-size: ${p => p.theme.fontSizes[1]};\n    line-height: ${p => p.theme.lineHeights.formField};\n    @media screen and (min-width: 768px) {\n      text-align: center;\n    }\n  }\n`;\n\nexport const MoneyText = styled.span`\n  font-family: ${p => p.theme.fonts.formField};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  font-size: ${p => p.theme.fontSizes[0]};\n  line-height: ${p => p.theme.lineHeights.formField};\n  margin-right: 24px;\n  margin-left: 20px;\n`;\n\nexport const Dropdown = styled(Field)`\n  width: 100%;\n  border: ${p => p.theme.borders.borderNone};\n`;\n\nexport const TabletWrapper = styled.div`\n  @media screen and (min-width: 768px) {\n    display: flex;\n    align-items: center;\n    gap: 32px;\n  }\n`;\n","import styled from 'styled-components';\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\n\nexport const StyledComment = styled(TextareaAutosize)`\n  width: 100%;\n  border: none;\n  border-bottom: ${p => p.theme.borderStyles.underline};\n  margin-bottom: 40px;\n  font-family: ${p => p.theme.fonts.placeholder};\n  font-weight: ${p => p.theme.fontWeights.normal};\n  font-size: ${p => p.theme.fontSizes[1]};\n\n  ::placeholder {\n    font-family: ${p => p.theme.fonts.placeholder};\n    font-weight: ${p => p.theme.fontWeights.normal};\n    font-size: ${p => p.theme.fontSizes[1]};\n    line-height: ${p => p.theme.lineHeights.formField};\n  }\n`;\n","import { StyledComment } from './Comment.styled';\nimport { useField } from 'formik';\nexport const Comment = ({ ...props }) => {\n  const [field] = useField(props);\n  return <StyledComment minRows={3} {...field} {...props} />;\n};\n","import styled from 'styled-components';\nimport { RiCalendar2Fill } from 'react-icons/ri';\nimport Datetime from 'react-datetime';\n\nexport const CalendarIcon = styled(RiCalendar2Fill)`\n  pointer-events: none;\n\n  color: ${p => p.theme.color.calendarIcon};\n  position: absolute;\n  right: 10px;\n  top: 75px;\n  @media screen and (min-width: 767px) {\n    right: 20px;\n    top: 6px;\n  }\n`;\n\nexport const StyledDateTime = styled(Datetime)`\n  position: relative;\n  display: flex;\n`;\n","import moment from 'moment';\nimport 'moment/locale/uk';\nimport 'react-datetime/css/react-datetime.css';\nimport { useFormikContext } from 'formik';\nimport { StyledDateTime } from './DatePicker.styled';\n\nexport const DatePicker = ({ name }) => {\n  const { setFieldValue, values } = useFormikContext();\n  const hadnleChange = value => {\n    setFieldValue(name, moment(value).utc());\n  };\n  const configDatePicker = {\n    locale: 'uk',\n\n    name,\n    value: values.date,\n  };\n\n  const inpuProps = {\n    style: {\n      display: 'block',\n      width: '100%',\n      border: 'none',\n      outline: 'none',\n      marginBottom: 40,\n      paddingLeft: 14,\n      paddingBottom: 0,\n      borderBottom: '1px solid #E0E0E0',\n      fontFamily: 'Circe',\n      fontStyle: 'normal',\n      fontWeight: '400',\n      fontSize: '18px',\n      lineHeight: '27px',\n    },\n  };\n\n  return (\n    <StyledDateTime\n      {...configDatePicker}\n      inputProps={inpuProps}\n      onChange={value => hadnleChange(value)}\n      dateFormat=\"DD.MM.YYYY\"\n      timeFormat={false}\n      closeOnSelect={true}\n    />\n  );\n};\n","import { styled, Select, MenuItem } from '@mui/material';\n\nexport const StyledSelect = styled(Select)`\n  font-family: 'Circe';\n  border-radius: 30px;\n  border-color: #4a56e2;\n\n  & .MuiOutlinedInput-notchedOutline {\n    border-color: #000;\n  }\n  &:hover .MuiOutlinedInput-notchedOutline {\n    border-color: #4a56e2;\n  }\n  &.Mui-focused .MuiOutlinedInput-notchedOutline {\n    border: 1px solid #4a56e2;\n    outline: none;\n  }\n  & .MuiSelect-outlined {\n    padding: 13px 20px;\n    color: #000;\n  }\n  & .MuiSelect-icon {\n    position: absolute;\n    right: 20px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n  & .MuiMenu-list {\n    background-color: red;\n  }\n  & .MuiInput-input {\n    :focus {\n      background-color: transparent;\n    }\n  }\n`;\n\nexport const StyledMenuItem = styled(MenuItem)`\n  font-family: 'Circe';\n\n  &:hover {\n    color: #ff6596;\n    background-color: #fff;\n  }\n  &.Mui-selected {\n    color: #ff6596;\n    background-color: #fff;\n  }\n  &.MuiMenu-list {\n    border-radius: 0;\n  }\n`;\n\nexport const dropdownIcon = props => (\n  <svg\n    {...props}\n    width=\"20\"\n    height=\"11\"\n    viewBox=\"0 0 20 11\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path d=\"M1 1L10 10L19 1\" stroke=\"black\" />\n  </svg>\n);\n\nexport const MenuProps = {\n  PaperProps: {\n    style: {\n      background: 'rgba(255, 255, 255, 0.7)',\n      boxShadow: '0px 6px 15px rgba(0, 0, 0, 0.1)',\n      backdropFilter: 'blur(25px)',\n      borderRadius: '20px',\n    },\n  },\n};\n","export const getCategories = state => state.categories.items;\n","import * as React from 'react';\n\nimport FormControl from '@mui/material/FormControl';\nimport {\n  StyledSelect,\n  StyledMenuItem,\n  dropdownIcon,\n  MenuProps,\n} from './CategorySelect.styled';\nimport { useFormikContext } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchTransactionsCategories } from 'redux/categories/categories-operations';\nimport { useEffect } from 'react';\nimport { getCategories } from 'redux/categories/categories-selector';\nimport {} from './CategorySelect.styled';\nexport default function CategorySelect({ name }) {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchTransactionsCategories());\n  }, [dispatch]);\n\n  const categories = useSelector(getCategories);\n\n  const { setFieldValue, values } = useFormikContext();\n\n  const handleChange = event => {\n    setFieldValue(name, event.target.value);\n  };\n\n  return (\n    <FormControl\n      variant=\"standard\"\n      sx={{\n        m: 1,\n        width: '100%',\n        marginBottom: '40px',\n        marginRight: 0,\n        marginLeft: 0,\n        fontSize: '12px',\n        borderBottomWidth: '1px',\n      }}\n    >\n      <StyledSelect\n        labelId=\"category\"\n        id=\"category\"\n        displayEmpty\n        value={values.category}\n        onChange={handleChange}\n        MenuProps={MenuProps}\n        IconComponent={dropdownIcon}\n      >\n        <StyledMenuItem value=\"none\" disabled>\n          <span style={{ color: '#E0E0E0' }}>Choose Category</span>\n        </StyledMenuItem>\n        {categories.map(option => {\n          return (\n            <StyledMenuItem key={option._id} value={option.category_id}>\n              {option.category_name}\n            </StyledMenuItem>\n          );\n        })}\n      </StyledSelect>\n    </FormControl>\n  );\n}\n","import { ErrorMessage, Formik } from 'formik';\n\nimport moment from 'moment';\nimport { toast } from 'react-toastify';\nimport {\n  fetchTransactions,\n  updateTransactionById,\n} from '../../redux/transactions/transactions-operation';\nimport * as Yup from 'yup';\nimport {\n  StyledForm,\n  TextField,\n  TabletWrapper,\n} from '../AddTransactionForm/AddTransactionForm.styled';\nimport { Comment } from 'components/AddTransactionForm/Comment/Comment';\nimport { DatePicker } from '../AddTransactionForm/DatePicker/DatePicker';\nimport CategorySelect from '../AddTransactionForm/CategorySelect/CategorySelect';\nimport { StyledButton } from '../ModalAddTransaction/StyledButton/StyledButton';\nimport { useDispatch } from 'react-redux';\nimport { CalendarIcon } from '../AddTransactionForm/DatePicker/DatePicker.styled';\n\nexport const ModalEditForm = ({ toggleModal, transaction }) => {\n  const transactionType = transaction?.transactionType;\n  const dispatch = useDispatch();\n\n  const initialDate = moment(transaction?.date).utc();\n  const initialValues = {\n    date: initialDate,\n    amount: transaction?.amount,\n    category: transaction?.category,\n    comment: transaction?.comment,\n  };\n\n  const addTrasactionSchema = Yup.object().shape({\n    category: Yup.string(),\n    amount: Yup.number().required(),\n    date: Yup.date().required(),\n    comment: Yup.string().max(50),\n  });\n  const handleSubmit = async ({ category, ...rest }, actions) => {\n    let result =\n      transactionType === 'expense'\n        ? { transactionType, category, ...rest }\n        : { transactionType, ...rest };\n\n    const updatePayload = { id: transaction._id, transaction: result };\n\n    try {\n      await dispatch(updateTransactionById(updatePayload));\n      await dispatch(fetchTransactions());\n      toggleModal();\n    } catch (error) {\n      toast.error`${error.message}`;\n    }\n    actions.resetForm();\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={addTrasactionSchema}\n      >\n        <StyledForm autoComplete=\"off\">\n          {transactionType === 'expense' ? (\n            <label htmlFor=\"category\">\n              <CategorySelect name=\"category\" />\n            </label>\n          ) : (\n            ''\n          )}\n          <TabletWrapper>\n            <label htmlFor=\"amount\">\n              <TextField type=\"number\" name=\"amount\" placeholder=\"0.00\" />\n              <ErrorMessage\n                name=\"amount\"\n                render={msg => {\n                  toast.error(`${msg}`, { toastId: String(new Date()) });\n                }}\n              />\n            </label>\n            <label htmlFor=\"date\" style={{ position: 'relative' }}>\n              <DatePicker name=\"date\" />\n              <CalendarIcon />\n            </label>\n          </TabletWrapper>\n          <label htmlFor=\"comment\">\n            <Comment name=\"comment\" placeholder=\"Comment\" minRows={4} />\n          </label>\n          <StyledButton type=\"submit\">Update transaction</StyledButton>\n        </StyledForm>\n      </Formik>\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { AiOutlineClose } from 'react-icons/ai';\n\nexport const CloseButton = styled.button`\n  display: none;\n  background-color: transparent;\n  border: ${p => p.theme.borders.borderNone};\n  outline: none;\n  @media screen and (min-width: 768px) {\n    display: block;\n    width: 16px;\n    height: 16px;\n    position: absolute;\n    top: 20px;\n    right: 20px;\n    cursor: pointer;\n  }\n`;\n\nexport const StyledCloseIcon = styled(AiOutlineClose)`\n  width: 16px;\n  height: 16px;\n`;\n","import { CloseButton } from './CloseButton.styled';\nimport { StyledCloseIcon } from './CloseButton.styled';\n\nexport const StyledCloseButton = ({ type, onClick }) => {\n  return (\n    <CloseButton type={type} onClick={onClick}>\n      <StyledCloseIcon />\n    </CloseButton>\n  );\n};\n","import { ModalWindow, Overlay } from './ModalEdit.styled';\nimport { createPortal } from 'react-dom';\nimport { useEffect } from 'react';\nimport { Heading } from 'components/ModalAddTransaction/ModalAddTransaction.styled';\nimport { ModalEditForm } from './ModalEditForm';\nimport { StyledButton } from 'components/ModalAddTransaction/StyledButton/StyledButton';\nimport { StyledCloseButton } from 'components/ModalAddTransaction/CloseButton/CloseButton';\n\nexport const ModalEdit = ({ toggleModal, isOpen, updateTransaction }) => {\n  const modalRoot = document.querySelector('#modal-root');\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        toggleModal();\n      }\n    };\n    if (isOpen) {\n      window.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isOpen, toggleModal]);\n\n  return createPortal(\n    <Overlay>\n      <ModalWindow>\n        <Heading>Edit transaction</Heading>\n\n        <ModalEditForm\n          toggleModal={toggleModal}\n          transaction={updateTransaction}\n        />\n        <StyledButton type=\"button\" onClick={toggleModal}>\n          Cancel\n        </StyledButton>\n        <StyledCloseButton type=\"button\" onClick={toggleModal} />\n      </ModalWindow>\n    </Overlay>,\n    modalRoot\n  );\n};\n","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport baseVars from 'stylesheet/vars';\nimport { EmptyContainer } from '../EmptyContainer/EmptyContainer';\nimport moment from 'moment';\nimport { Categories } from '../categories';\nimport EllipsisText from 'react-ellipsis-text';\nimport { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  fetchTransactions,\n  removeTransaction,\n  fetchTransactionById,\n} from 'redux/transactions/transactions-operation';\nimport { Delete, Edit } from '@mui/icons-material';\nimport { ModalEdit } from 'components/ModalEdit/ModalEdit';\n\nconst MobileCard = ({ items }) => {\n  const dispatch = useDispatch();\n  const [isModalEditOpen, setІsModalEditOpen] = useState(false);\n  const [updateTransaction, setUpdateTransaction] = useState({});\n  const onRemoveTransaction = id => {\n    dispatch(removeTransaction(id));\n  };\n\n  const transactions = useSelector(state => state.transactions.items);\n\n  useEffect(() => {\n    dispatch(fetchTransactions(1));\n  }, [dispatch, transactions.transactionsTotalQuantity]);\n  const toggleModal = () => {\n    setІsModalEditOpen(!isModalEditOpen);\n  };\n\n  const onEditTransaction = async id => {\n    try {\n      const transaction = await dispatch(fetchTransactionById(id));\n      setUpdateTransaction(transaction.payload);\n    } catch (error) {\n      toast.error(`${error.msg}`);\n    }\n    const transaction = await dispatch(fetchTransactionById(id));\n    setUpdateTransaction(transaction.payload);\n    toggleModal();\n  };\n\n  return (\n    <>\n      {items?.length !== 0 ? (\n        <TransactionContainer>\n          {items?.map(\n            ({\n              date,\n              transactionType,\n              category,\n              comment,\n              amount,\n              balance,\n              _id,\n            }) => (\n              <TransactionList key={_id} color={transactionType}>\n                <ListItems>\n                  <TitleItems>Date</TitleItems>\n                  <TextItems>{moment.utc(date).format('DD.MM.YY')}</TextItems>\n                </ListItems>\n                <ListItems>\n                  <TitleItems>Type</TitleItems>\n                  {transactionType === 'income' ? (\n                    <TextItems>+</TextItems>\n                  ) : (\n                    <TextItems>-</TextItems>\n                  )}{' '}\n                </ListItems>\n                <ListItems>\n                  <TitleItems>Category</TitleItems>\n                  <TextItems>{Categories(category)}</TextItems>\n                </ListItems>\n                <ListItems>\n                  <TitleItems>Comment</TitleItems>\n                  <TextItems>\n                    <EllipsisText\n                      text={`${comment || '---'}`}\n                      length={17}\n                      tooltip=\"true\"\n                    />\n                  </TextItems>\n                </ListItems>\n                <ListItems>\n                  <TitleItems>Sum</TitleItems>\n                  {transactionType === 'income' ? (\n                    <SumText style={{ color: '#24CCA7' }}>\n                      {amount.toFixed(2)}\n                    </SumText>\n                  ) : (\n                    <SumText style={{ color: '#FF6596' }}>\n                      {amount.toFixed(2)}\n                    </SumText>\n                  )}\n                </ListItems>\n                <ListItems>\n                  <TitleItems>Balance</TitleItems>\n                  <TextItems>{balance.toFixed(2)}</TextItems>\n                </ListItems>\n                <ListItems>\n                  <Button onClick={() => onEditTransaction(_id)}>\n                    <EditIcon />\n                  </Button>\n                  <Button onClick={() => onRemoveTransaction(_id)}>\n                    <DeleteIcon />\n                  </Button>\n                </ListItems>\n              </TransactionList>\n            )\n          )}\n        </TransactionContainer>\n      ) : (\n        <EmptyContainer />\n      )}\n      {isModalEditOpen && (\n        <ModalEdit\n          toggleModal={toggleModal}\n          isOpen={isModalEditOpen}\n          updateTransaction={updateTransaction}\n        />\n      )}\n    </>\n  );\n};\nMobileCard.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      _id: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired,\n      transactionType: PropTypes.string.isRequired,\n      category: PropTypes.number,\n      comment: PropTypes.string,\n      amount: PropTypes.number.isRequired,\n      balance: PropTypes.number.isRequired,\n    })\n  ),\n};\nexport default MobileCard;\n\nconst borderColor = type => {\n  switch (type) {\n    case 'expense':\n      return `${baseVars.colors.expensesText}`;\n    case 'income':\n      return `${baseVars.colors.incomeText}`;\n    default:\n      return `${baseVars.colors.secondText}`;\n  }\n};\n\nconst TransactionContainer = styled.div`\n  min-height: calc(100vh - 226px);\n  max-height: calc(100vh - 226px);\n  overflow: hidden;\n  overflow-y: scroll;\n  @media screen and (min-width: ${baseVars.sizeScreen.mobile}) {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\nconst TransactionList = styled.ul`\n  @media screen and (min-width: ${baseVars.sizeScreen.mobile}) {\n    box-sizing: border-box;\n    width: 280px;\n    list-style: none;\n    padding: 0px;\n    border-radius: 5px;\n    margin: 0px 20px 8px 20px;\n    background-color: ${baseVars.colors.secondText};\n    border-left: 5px solid;\n    border-color: ${({ color }) => borderColor(color)};\n  }\n`;\nconst ListItems = styled.li`\n  @media screen and (min-width: ${baseVars.sizeScreen.mobile}) {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 12px 20px 8px 20px;\n\n    :not(:last-child) {\n      border-bottom: 1px solid #dcdcdf;\n    }\n    :not(:first-child) {\n      padding-top: 12px;\n      padding-bottom: 8px;\n    }\n    :last-child {\n      padding-top: 8px;\n      justify-content: flex-end;\n    }\n  }\n`;\n\nconst TitleItems = styled.span`\n  @media screen and (min-width: ${baseVars.sizeScreen.mobile}) {\n    font-family: ${baseVars.fonts.main};\n    font-style: normal;\n    font-weight: 700;\n    font-size: 18px;\n    line-height: 27px;\n    color: ${baseVars.colors.mainText};\n  }\n`;\nconst TextItems = styled(TitleItems)`\n  @media screen and (min-width: ${baseVars.sizeScreen.mobile}) {\n    font-weight: 400;\n    font-size: 16px;\n    line-height: 24px;\n    text-align: right;\n  }\n`;\n\nconst SumText = styled(TextItems)`\n  @media screen and (min-width: ${baseVars.sizeScreen.mobile}) {\n    font-weight: 700;\n  }\n`;\n\nconst Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 24px;\n  height: 24px;\n  padding: 0;\n  border: none;\n  border-radius: 2px;\n  background-color: ${baseVars.colors.icon};\n  margin: 0;\n  cursor: pointer;\n  scale: 1;\n  transition: scale 250ms linear;\n\n  :not(:last-child) {\n    margin-right: 10px;\n  }\n\n  :hover {\n    scale: 1.2;\n    background-color: ${baseVars.colors.iconFocus};\n\n  }\n`;\n\nconst DeleteIcon = styled(Delete)`\n  color: ${baseVars.colors.secondText};\n  padding: 2px;\n`;\n\nconst EditIcon = styled(Edit)`\n  color: ${baseVars.colors.secondText};\n  padding: 2px;\n`;\n","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport baseVars from 'stylesheet/vars';\nimport { React } from 'react';\nimport { EmptyContainer } from '../EmptyContainer/EmptyContainer';\nimport moment from 'moment';\nimport { Categories } from '../categories';\nimport EllipsisText from 'react-ellipsis-text';\nimport { useState, useEffect } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  fetchTransactions,\n  fetchTransactionById,\n  removeTransaction,\n} from 'redux/transactions/transactions-operation';\nimport { ModalEdit } from 'components/ModalEdit/ModalEdit';\nimport { Delete, Edit } from '@mui/icons-material';\nimport { toast } from 'react-toastify';\n\nconst TabletTab = ({ items, columns }) => {\n  const dispatch = useDispatch();\n  const [isModalEditOpen, setІsModalEditOpen] = useState(false);\n  const [updateTransaction, setUpdateTransaction] = useState({});\n  const onRemoveTransaction = id => {\n    dispatch(removeTransaction(id));\n  };\n  const toggleModal = () => {\n    setІsModalEditOpen(!isModalEditOpen);\n  };\n\n  const onEditTransaction = async id => {\n    try {\n      const transaction = await dispatch(fetchTransactionById(id));\n      setUpdateTransaction(transaction.payload);\n    } catch (error) {\n      toast.error(`${error.msg}`);\n    }\n    const transaction = await dispatch(fetchTransactionById(id));\n    setUpdateTransaction(transaction.payload);\n    toggleModal();\n  };\n\n  const transactions = useSelector(state => state.transactions.items);\n\n  useEffect(() => {\n    dispatch(fetchTransactions(1));\n  }, [dispatch, transactions.transactionsTotalQuantity]);\n\n  return (\n    <>\n      {items?.length !== 0 ? (\n        <GeneralContainer>\n          <table>\n            <HeadContainer>\n              <HeadList>\n                {columns.map(colum => (\n                  <HeadTitles key={colum.accessor}>{colum.Header} </HeadTitles>\n                ))}\n              </HeadList>\n            </HeadContainer>\n          </table>\n          <TableWrapper>\n          <BodyTable>\n            <Tbody>\n              {items?.map(\n                ({\n                  date,\n                  transactionType,\n                  category,\n                  comment,\n                  amount,\n                  balance,\n                  _id,\n                }) => (\n                  <BodyList key={_id}>\n                    <BodyItems>{moment.utc(date).format('DD.MM.YY')}</BodyItems>\n                    <BodyItems>\n                      {transactionType === 'income' ? '+' : '-'}\n                    </BodyItems>\n                    <BodyItems>{Categories(category)}</BodyItems>\n                    <BodyItems>\n                      <EllipsisText\n                        text={`${comment || '---'}`}\n                        length={24}\n                        tooltip=\"true\"\n                      />\n                    </BodyItems>\n                    <BodyItems>\n                      {transactionType === 'income' ? (\n                        <SpanSum\n                          style={{ color: `${baseVars.colors.incomeText}` }}\n                        >\n                          {amount.toFixed(2)}\n                        </SpanSum>\n                      ) : (\n                        <SpanSum\n                          style={{ color: `${baseVars.colors.expensesText}` }}\n                        >\n                          {amount.toFixed(2)}\n                        </SpanSum>\n                      )}\n                    </BodyItems>\n                    <BodyItems>{balance.toFixed(2)}</BodyItems>\n                    <BodyItems>\n                      <Button onClick={() => onEditTransaction(_id)}>\n                        <EditIcon />\n                      </Button>\n                      <Button onClick={() => onRemoveTransaction(_id)}>\n                        <DeleteIcon />\n                      </Button>\n                    </BodyItems>\n                  </BodyList>\n                )\n              )}\n            </Tbody>\n            </BodyTable>\n            </TableWrapper>\n        </GeneralContainer>\n      ) : (\n        <EmptyContainer />\n      )}\n      {isModalEditOpen && (\n        <ModalEdit\n          toggleModal={toggleModal}\n          isOpen={isModalEditOpen}\n          updateTransaction={updateTransaction}\n        />\n      )}\n    </>\n  );\n};\n\nTabletTab.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      _id: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired,\n      transactionType: PropTypes.string.isRequired,\n      category: PropTypes.number,\n      comment: PropTypes.string,\n      amount: PropTypes.number.isRequired,\n      balance: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default TabletTab;\n\nconst GeneralContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  @media screen and (min-width: ${baseVars.sizeScreen.tablet}) {\n    width: 704px;\n    background-color: transparent;\n  }\n  @media screen and (min-width: ${baseVars.sizeScreen.desktop}) {\n    width: 715px;\n  }\n`;\nconst HeadContainer = styled.thead`\n  display: table-caption;\n  box-sizing: border-box;\n  height: 58px;\n  background-color: ${baseVars.colors.secondText};\n  padding: 16px 20px 15px 20px;\n  border-radius: 30px;\n`;\nconst HeadList = styled.tr`\n  display: flex;\n  justify-content: space-between;\n`;\nconst HeadTitles = styled.th`\n  font-family: ${baseVars.fonts.main};\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 27px;\n  text-align: start;\n  color: ${baseVars.colors.mainText};\n\n  :first-child {\n    width: 55px;\n  }\n  :nth-child(2) {\n    width: 65px;\n    text-align: center;\n  }\n  :nth-child(3) {\n    width: 135px;\n  }\n  :nth-child(4) {\n    width: 105px;\n  }\n  :nth-child(5) {\n    width: 85px;\n    text-align: right;\n  }\n  :nth-child(6) {\n    width: 85px;\n    text-align: right;\n    margin-right: 75px;\n  }\n`;\n\nconst TableWrapper = styled.div`\n\n`;\n\n\nconst BodyTable = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  /* border: 1px solid #000; */\n`;\n\nconst Tbody = styled.tbody`\n\n`;\n\nconst BodyList = styled.tr`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  font-family: ${baseVars.fonts.main};\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 1.5;\n  color: ${baseVars.colors.mainText};\n  padding-top: 14px;\n  padding-bottom: 14px;\n\n  :first-child {\n    padding-top: 16px;\n  }\n  :not(:last-child) {\n    border-bottom: 1px solid #dcdcdf;\n  }\n`;\nconst BodyItems = styled.td`\n  text-align: start;\n\n  :first-child {\n    width: 75px;\n    padding-left: 20px;\n  }\n  :nth-child(2) {\n    width: 65px;\n    text-align: center;\n  }\n  :nth-child(3) {\n    width: 135px;\n  }\n  :nth-child(4) {\n    width: 105px;\n  }\n  :nth-child(5) {\n    width: 85px;\n    text-align: right;\n  }\n  :nth-child(6) {\n    width: 85px;\n    text-align: right;\n  }\n  :nth-child(7) {\n    display: flex;\n  }\n  :hover {\n    z-index: 1;\n    overflow: visible;\n  }\n`;\n\nconst SpanSum = styled.span`\n  font-weight: 700;\n`;\n\nconst Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 24px;\n  height: 24px;\n  padding: 0;\n  border: none;\n  border-radius: 2px;\n  background-color: ${baseVars.colors.icon};\n  margin: 0;\n  margin-right: 10px;\n  cursor: pointer;\n  scale: 1;\n  transition: scale 250ms linear;\n\n  :hover {\n    scale: 1.2;\n    background-color: ${baseVars.colors.iconFocus};\n  }\n`;\n\nconst DeleteIcon = styled(Delete)`\n  color: ${baseVars.colors.secondText};\n  padding: 2px;\n`;\n\nconst EditIcon = styled(Edit)`\n  color: ${baseVars.colors.secondText};\n  padding: 2px;\n`;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  position: absolute;\n  bottom: 15px;\n  right: 0px;\n  background-color: ${props => props.theme.buttons.primary.bg};\n  width: 44px;\n  height: 44px;\n  border-radius: 50%;\n  outline: none;\n  border: none;\n  color: ${props => props.theme.buttons.primary.color};\n  font-size: 20px;\n  scale: 1;\n  cursor: pointer;\n  :hover {\n    scale: 1.2;\n    transition: scale 150ms linear;\n  }\n\n  @media (min-width: 768px) {\n    bottom: 20px;\n    right: 18px;\n  }\n\n  @media (min-width: 1280px) {\n    bottom: 20px;\n    right: 18px;\n  }\n`;\n","import { Button } from \"./ButtonCircle.styled\";\n\nexport const ButtonCircle = ({ children, onClick }) => {\n  return <Button onClick={onClick}>{children}</Button>;\n};\n","import { ErrorMessage, Formik } from 'formik';\nimport { useState } from 'react';\nimport moment from 'moment';\nimport { toast } from 'react-toastify';\nimport {\n  addTransaction,\n  fetchTransactions,\n} from '../../redux/transactions/transactions-operation';\nimport * as Yup from 'yup';\nimport {\n  CheckboxContainter,\n  CheckboxField,\n  MoneyText,\n  StyledForm,\n  TextField,\n  TabletWrapper,\n} from './AddTransactionForm.styled';\nimport { Comment } from 'components/AddTransactionForm/Comment/Comment';\nimport { DatePicker } from './DatePicker/DatePicker';\nimport CategorySelect from './CategorySelect/CategorySelect';\nimport { StyledButton } from '../ModalAddTransaction/StyledButton/StyledButton';\nimport { useDispatch } from 'react-redux';\nimport { CalendarIcon } from './DatePicker/DatePicker.styled';\n\nexport const AddTransactionForm = ({ toggleModal }) => {\n  moment.updateLocale('uk');\n\n  const [transactionType, setTransactonType] = useState('income');\n\n  const isIncomeHandler = e => {\n    let isChecked = e.target.checked;\n    isChecked ? setTransactonType('expense') : setTransactonType('income');\n  };\n\n  const dispatch = useDispatch();\n  const initialDate = moment().utc();\n  const initialValues = {\n    date: initialDate,\n    amount: '',\n    category: 'none',\n    comment: '',\n  };\n\n  const addTrasactionSchema = Yup.object().shape({\n    category: Yup.string(),\n    amount: Yup.number().required(),\n    date: Yup.date().required(),\n    comment: Yup.string().max(50),\n  });\n\n  const handleSubmit = async ({ category, ...rest }, actions) => {\n    let result =\n      transactionType === 'expense'\n        ? { transactionType, category, ...rest }\n        : { transactionType, ...rest };\n\n    try {\n      await dispatch(addTransaction(result));\n      await dispatch(fetchTransactions());\n      toggleModal();\n    } catch (error) {\n      toast.error`${error.message}`;\n    }\n    actions.resetForm();\n  };\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={addTrasactionSchema}\n      >\n        <StyledForm autoComplete=\"off\">\n          <label htmlFor=\"transactionType\">\n            <CheckboxContainter>\n              <MoneyText\n                style={\n                  transactionType === 'income'\n                    ? { color: '#24cca7' }\n                    : { color: '#E0E0E0' }\n                }\n              >\n                Income\n              </MoneyText>\n              <CheckboxField\n                type=\"checkbox\"\n                name=\"transactionType\"\n                onChange={e => isIncomeHandler(e)}\n                value={transactionType}\n              />\n\n              <MoneyText\n                style={\n                  transactionType === 'expense'\n                    ? { color: '#FF6596' }\n                    : { color: '#E0E0E0' }\n                }\n              >\n                Expenses\n              </MoneyText>\n            </CheckboxContainter>\n          </label>\n          {transactionType === 'expense' ? (\n            <label htmlFor=\"category\">\n              <CategorySelect name=\"category\" />\n            </label>\n          ) : (\n            ''\n          )}\n          <TabletWrapper>\n            <label htmlFor=\"amount\">\n              <TextField type=\"number\" name=\"amount\" placeholder=\"0.00\" />\n              <ErrorMessage\n                name=\"amount\"\n                render={msg => {\n                  toast.error(`${msg}`, { toastId: String(new Date()) });\n                }}\n              />\n            </label>\n            <label htmlFor=\"date\" style={{ position: 'relative' }}>\n              <DatePicker name=\"date\" />\n              <CalendarIcon />\n              <ErrorMessage\n                name=\"date\"\n                render={msg => {\n                  toast.error(`${msg}`, { toastId: String(new Date()) });\n                }}\n              />\n            </label>\n          </TabletWrapper>\n          <label htmlFor=\"comment\">\n            <Comment name=\"comment\" placeholder=\"Comment\" minRows={4} />\n          </label>\n          <StyledButton type=\"submit\">Add transaction</StyledButton>\n        </StyledForm>\n      </Formik>\n    </>\n  );\n};\n","import { ModalWindow, Overlay } from './ModalAddTransaction.styled';\nimport { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { StyledButton } from 'components/ModalAddTransaction/StyledButton/StyledButton';\nimport { AddTransactionForm } from '../AddTransactionForm/AddTransactionForm';\nimport { Heading } from './ModalAddTransaction.styled';\nimport { StyledCloseButton } from './CloseButton/CloseButton';\n\nexport const ModalAddTransaction = ({ toggleModal, isOpen }) => {\n  const modalRoot = document.querySelector('#modal-root');\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        toggleModal();\n      }\n    };\n    if (isOpen) {\n      window.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isOpen, toggleModal]);\n\n  return createPortal(\n    <Overlay>\n      <ModalWindow>\n        <Heading>Add transaction</Heading>\n\n        <AddTransactionForm toggleModal={toggleModal} />\n        <StyledButton type=\"button\" onClick={toggleModal}>\n          Cancel\n        </StyledButton>\n        <StyledCloseButton type=\"button\" onClick={toggleModal} />\n      </ModalWindow>\n    </Overlay>,\n    modalRoot\n  );\n};\n","export const getTransactions = ({ transactions }) => transactions.items;\n","export const COLUMNS = [\n  {\n    Header: \"Date\",\n    accessor: \"date\",\n  },\n  {\n    Header: \"Type\",\n    accessor: \"type\",\n  },\n  {\n    Header: \"Category\",\n    accessor: \"category\",\n  },\n  {\n    Header: \"Comment\",\n    accessor: \"comment\",\n  },\n  {\n    Header: \"Sum\",\n   accessor: \"sum\",\n  },\n  {\n    Header: \"Balance\",\n    accessor: \"balance\"\n  },\n];","import { React, Fragment,useEffect, useMemo, useState } from \"react\";\nimport MobileCard from \"./MobileCard/MobileCard\";\nimport TabletTab from \"./TabletTab/TabletTab\";\nimport Media from 'react-media';\nimport { ButtonCircle } from 'components/ButtonCircle/ButtonCircle';\nimport { ModalAddTransaction } from 'components/ModalAddTransaction/ModalAddTransaction';\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchTransactions} from 'redux/transactions/transactions-operation';\nimport { getTransactions } from 'redux/transactions/transactions-selector';\nimport { toggleModal } from 'redux/modal/modal-sclice';\nimport { COLUMNS } from './columns'\nimport { Pagination } from '@mui/material';\nimport styled from 'styled-components';\nimport baseVars from 'stylesheet/vars';\n\n\nconst HomeTab = () => { \n  const [page, setPage] = useState(1);\n  const [transactionsPerPage] = useState(10);\n  const columns = useMemo(() => COLUMNS, []);\n  const { result: data, transactionsTotalQuantity } = useSelector(getTransactions);\n  \n  const dispatch = useDispatch();\n\n  const isModalOpen = useSelector(\n    state => state.global.isAddTransactionModalOpen\n  );\n\n  const onModal = () => {\n    dispatch(toggleModal(!isModalOpen));\n  };\n\n  useEffect(() => {\n    // console.log(page + \"!!!\")\n    dispatch(fetchTransactions(page));\n  }, [dispatch, page]);\n  \n\n  const handleChange = (e, page) => {\n  setPage(page)\n}\n  const totalPages = Math.ceil(transactionsTotalQuantity / transactionsPerPage)\n  const totalPagesInteger =  totalPages ? totalPages : 1\n  \n  return (\n    <Con>\n      <Media queries={{\n        small: \"(max-width: 767px)\",\n        medium: \"(min-width: 768px) and (max-width: 1279px)\",\n        large: \"(min-width: 1280px)\"\n      }}>\n        {matches => (\n          <Fragment>\n            {matches.small && <MobileCard items={data} columns={columns} />}\n            {matches.medium && <TabletTab items={data} columns={columns}   />}\n            {matches.large && <TabletTab items={data} columns={columns} />}\n            {(transactionsTotalQuantity > 10) ? <Paginate  count={totalPagesInteger} page={page} onChange={handleChange} /> : null }\n          </Fragment>\n        )}\n      </Media>\n\n      <ButtonCircle onClick={onModal}>+</ButtonCircle>\n      {isModalOpen && (\n        <ModalAddTransaction toggleModal={onModal} isOpen={isModalOpen} />\n      )}\n    </Con>\n    )\n}\n\nexport default HomeTab\n\nconst Con = styled.div`\nposition: relative;\n  display:flex;\n  flex-direction: column;\n  padding-bottom: 70px;\n\n  @media screen and (min-width: ${baseVars.sizeScreen.tablet}) {\n    height: 100%;\n    padding-bottom: 70px;\n  }\n\n  @media screen and (min-width: ${baseVars.sizeScreen.desktop}) {\n    padding-top: 32px;\n    align-items: flex-end;\n  }\n`\nconst Paginate = styled(Pagination)`\n  position: absolute;\n  bottom: 20px;\n  display:flex;\n  justify-content: center;\n  margin-top: 20px;\n  @media screen and (min-width: ${baseVars.sizeScreen.mobile}) {\n    width:280px;}\n  @media screen and (min-width: ${baseVars.sizeScreen.tablet}) {\n    width: 704px;}\n    @media screen and (min-width: ${baseVars.sizeScreen.desktop}) {\n    width: 715px;}\n`"],"names":["EmptyContainer","Container","Text","styled","baseVars","Categories","id","Overlay","p","theme","color","overlayBg","ModalWindow","modalWindowBg","radii","modalWindow","StyledForm","Form","CheckboxContainter","CheckboxField","switcherBgUncheked","switcherBg","borderStyles","underline","buttons","primary","bg","broderSwitcher","borders","borderNone","fontSizes","muted","expense","shadows","switcherShadow","TextField","Field","fontWeights","normal","fonts","textField","placeholder","lineHeights","formField","MoneyText","bold","TabletWrapper","StyledComment","TextareaAutosize","Comment","props","useField","field","minRows","CalendarIcon","RiCalendar2Fill","calendarIcon","StyledDateTime","Datetime","DatePicker","name","useFormikContext","setFieldValue","values","configDatePicker","locale","value","date","inputProps","style","display","width","border","outline","marginBottom","paddingLeft","paddingBottom","borderBottom","fontFamily","fontStyle","fontWeight","fontSize","lineHeight","onChange","moment","utc","hadnleChange","dateFormat","timeFormat","closeOnSelect","StyledSelect","Select","StyledMenuItem","MenuItem","dropdownIcon","height","viewBox","fill","xmlns","d","stroke","MenuProps","PaperProps","background","boxShadow","backdropFilter","borderRadius","getCategories","state","categories","items","CategorySelect","dispatch","useDispatch","useEffect","fetchTransactionsCategories","useSelector","FormControl","variant","sx","m","marginRight","marginLeft","borderBottomWidth","labelId","displayEmpty","category","event","target","IconComponent","disabled","map","option","category_id","category_name","_id","ModalEditForm","toggleModal","transaction","transactionType","initialValues","amount","comment","addTrasactionSchema","Yup","shape","required","max","handleSubmit","actions","rest","result","updatePayload","updateTransactionById","fetchTransactions","toast","message","resetForm","onSubmit","validationSchema","autoComplete","htmlFor","type","render","msg","toastId","String","Date","position","StyledButton","S","CloseButton","StyledCloseIcon","AiOutlineClose","StyledCloseButton","onClick","ModalEdit","isOpen","updateTransaction","modalRoot","document","querySelector","handleKeyDown","e","code","window","addEventListener","removeEventListener","createPortal","useState","isModalEditOpen","setІsModalEditOpen","setUpdateTransaction","transactions","transactionsTotalQuantity","onEditTransaction","fetchTransactionById","payload","length","TransactionContainer","balance","TransactionList","ListItems","TitleItems","TextItems","format","text","tooltip","SumText","toFixed","Button","EditIcon","removeTransaction","DeleteIcon","borderColor","Delete","Edit","columns","GeneralContainer","HeadContainer","HeadList","colum","HeadTitles","Header","accessor","TableWrapper","BodyTable","Tbody","BodyList","BodyItems","SpanSum","ButtonCircle","children","AddTransactionForm","setTransactonType","addTransaction","isChecked","checked","isIncomeHandler","ModalAddTransaction","getTransactions","COLUMNS","page","setPage","transactionsPerPage","useMemo","data","isModalOpen","global","isAddTransactionModalOpen","onModal","handleChange","totalPages","Math","ceil","totalPagesInteger","Con","queries","small","medium","large","matches","Fragment","Paginate","count","Pagination"],"sourceRoot":""}