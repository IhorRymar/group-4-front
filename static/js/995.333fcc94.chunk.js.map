{"version":3,"file":"static/js/995.333fcc94.chunk.js","mappings":"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","sources":["components/HomeTab/EmptyContainer/EmptyContainer.jsx","components/HomeTab/categories.jsx","components/TransactionForm/TransactionForm.styled.jsx","components/TransactionForm/Comment/Comment.styled.jsx","components/TransactionForm/Comment/Comment.jsx","components/TransactionForm/DatePicker/DatePicker.styled.js","components/TransactionForm/DatePicker/DatePicker.js","components/TransactionForm/CategorySelect/CategorySelect.styled.jsx","redux/categories/categories-selector.js","components/TransactionForm/CategorySelect/CategorySelect.js","components/TransactionForm/TransactionForm.jsx","components/ModalEdit/ModalEdit.jsx","components/ModalDelTransaction/ModalDelTransaction.jsx","components/HomeTab/MobileCard/MobileCard.jsx","components/HomeTab/TabletTab/TabletTab.jsx","components/ButtonCircle/ButtonCircle.styled.jsx","components/ButtonCircle/ButtonCircle.jsx","components/ModalAddTransaction/ModalAddTransaction.jsx","redux/transactions/transactions-selector.js","components/HomeTab/columns.js","components/HomeTab/HomeTab.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport baseVars from \"stylesheet/vars\";\n\nexport const EmptyContainer = () => { \n    return (\n        <Container>\n            <Text>No transactions</Text>\n        </Container>\n    )\n}\nconst Container = styled.div`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nmargin: 0 auto;\nbackground-color: transparent;\n/* border: 1px solid #DCDCDF; */\n@media screen and (min-width: ${baseVars.sizeScreen.mobile}) {\n    width:280px;\n    height:282px;}\n@media screen and (min-width: ${baseVars.sizeScreen.tablet}) {\n   width:704px;\n  height:312px;\n  }\n@media screen and (min-width: ${baseVars.sizeScreen.desktop}) {\n  width: 715px;\n  }\n`;\nconst Text = styled.p`\n   font-family: ${ baseVars.fonts.main};\nfont-style: normal;\nfont-weight: 700;\nfont-size: 30px;\nline-height: 18px;\ncolor: #DCDCDF; \n`;\n","export const Categories = id => {\n  switch (id) {\n    case 0:\n      return  \"Main expenses\";\n    case 1:\n      return \"Products\";\n     case 2:\n      return \"Car\";\n    case 3:\n      return \"Self care\";\n     case 4:\n      return \"Child care\";\n    case 5:\n      return \"Household products\";\n     case 6:\n      return \"Education\";\n    case 7:\n      return \"Leisure\";\n     case 8:\n      return \"Entertainment\";\n    case 9:\n      return \"Help UA Armed Force\";\n    case 999:\n      return \"Other expenses\";\n    default:\n      return \"---\";\n  }\n};\n","import styled from 'styled-components';\n\nimport { Field, Form } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  label > input {\n    margin-bottom: 40px;\n  }\n`;\n\nexport const CheckboxContainter = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  min-height: 44px;\n  transform: translate(-50%, -50%);\n  margin-top: 40px;\n  left: 50%;\n`;\n\nexport const CheckboxField = styled.input`\n  appearance: none;\n  width: 80px;\n  height: 40px;\n  background-color: ${p => p.theme.color.switcherBgUncheked};\n  position: relative;\n  border-radius: ${p => p.theme.radii.switcherBg};\n  transition: 0.3s;\n  cursor: pointer;\n  border: ${p => p.theme.borderStyles.underline};\n  outline: none;\n\n  :before {\n    content: '+';\n    position: absolute;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: ${p => p.theme.buttons.primary.bg};\n    width: 44px;\n    height: 44px;\n    border-radius: ${p => p.theme.radii.broderSwitcher};\n    outline: none;\n    border: ${p => p.theme.borders.borderNone};\n    color: ${p => p.theme.buttons.primary.color};\n    font-size: ${p => p.theme.fontSizes[0]};\n    left: -4px;\n    top: -2px;\n    transition: 0.6s;\n    filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\n  }\n\n  :checked {\n    background-color: ${p => p.theme.color.muted};\n\n    :before {\n      content: '-';\n      background-color: ${p => p.theme.color.expense};\n      box-shadow: ${p => p.theme.shadows.switcherShadow};\n      left: 40px;\n    }\n  }\n`;\n\nexport const TextField = styled(Field)`\n  border: ${p => p.theme.borders.borderNone};\n  border-bottom: ${p => p.theme.borderStyles.underline};\n  width: 100%;\n  padding-left: 14px;\n  padding-right: 14px;\n  padding-bottom: 8px;\n  outline: none;\n  font-size: ${p => p.theme.fontSizes[1]};\n  font-weight: ${p => p.theme.fontWeights.normal};\n  font-family: ${p => p.theme.fonts.textField};\n\n  ::placeholder {\n    color: ${p => p.theme.color.muted};\n    font-family: ${p => p.theme.fonts.placeholder};\n    font-weight: ${p => p.theme.fontWeights.normal};\n    font-size: ${p => p.theme.fontSizes[1]};\n    line-height: ${p => p.theme.lineHeights.formField};\n    @media screen and (min-width: 768px) {\n      text-align: center;\n    }\n  }\n`;\n\nexport const MoneyText = styled.span`\n  font-family: ${p => p.theme.fonts.formField};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  font-size: ${p => p.theme.fontSizes[0]};\n  line-height: ${p => p.theme.lineHeights.formField};\n  margin-right: 24px;\n  margin-left: 20px;\n`;\n\nexport const Dropdown = styled(Field)`\n  width: 100%;\n  border: ${p => p.theme.borders.borderNone};\n`;\n\nexport const TabletWrapper = styled.div`\n  @media screen and (min-width: 768px) {\n    display: flex;\n    align-items: center;\n    gap: 32px;\n  }\n`;\n","import styled from 'styled-components';\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\n\nexport const StyledComment = styled(TextareaAutosize)`\n  width: 100%;\n  border: none;\n  border-bottom: ${p => p.theme.borderStyles.underline};\n  margin-bottom: 40px;\n  font-family: ${p => p.theme.fonts.placeholder};\n  font-weight: ${p => p.theme.fontWeights.normal};\n  font-size: ${p => p.theme.fontSizes[1]};\n  resize: none;\n\n  ::placeholder {\n    font-family: ${p => p.theme.fonts.placeholder};\n    font-weight: ${p => p.theme.fontWeights.normal};\n    font-size: ${p => p.theme.fontSizes[1]};\n    line-height: ${p => p.theme.lineHeights.formField};\n  }\n`;\n","import { StyledComment } from './Comment.styled';\nimport { useField } from 'formik';\nexport const Comment = ({ ...props }) => {\n  const [field] = useField(props);\n  return <StyledComment minRows={3} {...field} {...props} />;\n};\n","import styled from 'styled-components';\nimport { RiCalendar2Fill } from 'react-icons/ri';\nimport Datetime from 'react-datetime';\n\nexport const CalendarIcon = styled(RiCalendar2Fill)`\n  pointer-events: none;\n\n  color: ${p => p.theme.color.calendarIcon};\n  position: absolute;\n  right: 10px;\n  top: 75px;\n  @media screen and (min-width: 767px) {\n    right: 20px;\n    top: 6px;\n  }\n`;\n\nexport const StyledDateTime = styled(Datetime)`\n  position: relative;\n  display: flex;\n`;\n","import moment from 'moment';\nimport 'moment/locale/uk';\nimport 'react-datetime/css/react-datetime.css';\nimport { useFormikContext } from 'formik';\nimport { StyledDateTime } from './DatePicker.styled';\n\nexport const DatePicker = ({ name }) => {\n  const { setFieldValue, values } = useFormikContext();\n  const hadnleChange = value => {\n    setFieldValue(name, moment(value).utc());\n  };\n  const configDatePicker = {\n    locale: 'uk',\n\n    name,\n    value: values.date,\n  };\n\n  const inpuProps = {\n    style: {\n      display: 'block',\n      width: '100%',\n      border: 'none',\n      outline: 'none',\n      marginBottom: 40,\n      paddingLeft: 14,\n      paddingBottom: 0,\n      borderBottom: '1px solid #E0E0E0',\n      fontFamily: 'Circe',\n      fontStyle: 'normal',\n      fontWeight: '400',\n      fontSize: '18px',\n      lineHeight: '27px',\n    },\n  };\n\n  return (\n    <StyledDateTime\n      {...configDatePicker}\n      inputProps={inpuProps}\n      onChange={value => hadnleChange(value)}\n      dateFormat=\"DD.MM.YYYY\"\n      timeFormat={false}\n      closeOnSelect={true}\n    />\n  );\n};\n","import { styled, Select, MenuItem } from '@mui/material';\n\nexport const StyledSelect = styled(Select)`\n  font-family: 'Circe';\n  border-radius: 30px;\n  border-color: #4a56e2;\n\n  & .MuiOutlinedInput-notchedOutline {\n    border-color: #000;\n  }\n  &:hover .MuiOutlinedInput-notchedOutline {\n    border-color: #4a56e2;\n  }\n  &.Mui-focused .MuiOutlinedInput-notchedOutline {\n    border: 1px solid #4a56e2;\n    outline: none;\n  }\n  & .MuiSelect-outlined {\n    padding: 13px 20px;\n    color: #000;\n  }\n  & .MuiSelect-icon {\n    position: absolute;\n    right: 20px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n  & .MuiMenu-list {\n    background-color: red;\n  }\n  & .MuiInput-input {\n    :focus {\n      background-color: transparent;\n    }\n  }\n`;\n\nexport const StyledMenuItem = styled(MenuItem)`\n  font-family: 'Circe';\n\n  &:hover {\n    color: #ff6596;\n    background-color: #fff;\n  }\n  &.Mui-selected {\n    color: #ff6596;\n    background-color: #fff;\n  }\n  &.MuiMenu-list {\n    border-radius: 0;\n  }\n`;\n\nexport const dropdownIcon = props => (\n  <svg\n    {...props}\n    width=\"20\"\n    height=\"11\"\n    viewBox=\"0 0 20 11\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path d=\"M1 1L10 10L19 1\" stroke=\"black\" />\n  </svg>\n);\n\nexport const MenuProps = {\n  PaperProps: {\n    style: {\n      background: 'rgba(255, 255, 255, 0.7)',\n      boxShadow: '0px 6px 15px rgba(0, 0, 0, 0.1)',\n      backdropFilter: 'blur(25px)',\n      borderRadius: '20px',\n    },\n  },\n};\n","export const getCategories = state => state.categories.items;\n","import * as React from 'react';\n\nimport FormControl from '@mui/material/FormControl';\nimport {\n  StyledSelect,\n  StyledMenuItem,\n  dropdownIcon,\n  MenuProps,\n} from './CategorySelect.styled';\nimport { useFormikContext } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchTransactionsCategories } from 'redux/categories/categories-operations';\nimport { useEffect } from 'react';\nimport { getCategories } from 'redux/categories/categories-selector';\nimport {} from './CategorySelect.styled';\nexport default function CategorySelect({ name }) {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchTransactionsCategories());\n  }, [dispatch]);\n\n  const categories = useSelector(getCategories);\n\n  const { setFieldValue, values } = useFormikContext();\n\n  const handleChange = event => {\n    setFieldValue(name, event.target.value);\n  };\n\n  return (\n    <FormControl\n      variant=\"standard\"\n      sx={{\n        m: 1,\n        width: '100%',\n        marginBottom: '40px',\n        marginRight: 0,\n        marginLeft: 0,\n        fontSize: '12px',\n        borderBottomWidth: '1px',\n      }}\n    >\n      <StyledSelect\n        labelId=\"category\"\n        id=\"category\"\n        displayEmpty\n        value={values.category}\n        onChange={handleChange}\n        MenuProps={MenuProps}\n        IconComponent={dropdownIcon}\n      >\n        <StyledMenuItem value=\"none\" disabled>\n          <span style={{ color: '#E0E0E0' }}>Choose Category</span>\n        </StyledMenuItem>\n        {categories.map(option => {\n          return (\n            <StyledMenuItem key={option._id} value={option.category_id}>\n              {option.category_name}\n            </StyledMenuItem>\n          );\n        })}\n      </StyledSelect>\n    </FormControl>\n  );\n}\n","import { ErrorMessage, Formik } from 'formik';\n\nimport moment from 'moment';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport {\n  addTransaction,\n  fetchTransactions,\n  updateTransactionById,\n} from '../../redux/transactions/transactions-operation';\nimport * as Yup from 'yup';\nimport {\n  StyledForm,\n  CheckboxContainter,\n  CheckboxField,\n  MoneyText,\n  TextField,\n  TabletWrapper,\n} from './TransactionForm.styled';\nimport { Comment } from './Comment/Comment';\nimport { DatePicker } from './DatePicker/DatePicker';\nimport CategorySelect from './CategorySelect/CategorySelect';\nimport { StyledButton } from '../StyledButton/StyledButton';\nimport { useDispatch } from 'react-redux';\nimport { CalendarIcon } from './DatePicker/DatePicker.styled';\nimport { isAddModalOpen, isEditModalOpen } from 'redux/modal/modal-sclice';\nimport { fetchBalance } from 'redux/balance/balance-operation';\n\nexport const TransactionForm = ({ transaction, typeForm }) => {\n  const initalTransactionType =\n    typeForm === 'add' ? 'income' : transaction?.transactionType;\n\n  const dispatch = useDispatch();\n  const [transactionType, setTransactonType] = useState(initalTransactionType);\n  const isIncomeHandler = e => {\n    let isChecked = e.target.checked;\n    isChecked ? setTransactonType('expense') : setTransactonType('income');\n  };\n\n  const initialDate = moment(transaction?.date).utc();\n  const initialValues =\n    typeForm === 'add'\n      ? { date: initialDate, amount: '', category: 'none', comment: '' }\n      : {\n          date: initialDate,\n          amount: transaction?.amount,\n          category: transaction?.category,\n          comment: transaction?.comment,\n        };\n\n  const addTrasactionSchema = Yup.object().shape({\n    category: Yup.string(),\n    amount: Yup.number().required(),\n    date: Yup.date().required(),\n    comment: Yup.string().max(50),\n  });\n\n  const handleSubmit = async ({ category, ...rest }, actions) => {\n    let result =\n      transactionType === 'expense'\n        ? { transactionType, category, ...rest }\n        : { transactionType, ...rest };\n\n    const submitData =\n      typeForm === 'add' ? { ...result } : { id: transaction._id, result };\n    try {\n      switch (typeForm) {\n        case 'add':\n          await dispatch(addTransaction(submitData));\n          break;\n        case 'update':\n          await dispatch(updateTransactionById(submitData));\n          dispatch(fetchBalance());\n          break;\n\n        default:\n          alert('Something went wrong!');\n      }\n      await dispatch(fetchTransactions());\n      typeForm === 'add'\n        ? dispatch(isAddModalOpen(false))\n        : dispatch(isEditModalOpen(false));\n    } catch (error) {\n      toast.error`${error.message}`;\n    }\n    actions.resetForm();\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={addTrasactionSchema}\n      >\n        <StyledForm autoComplete=\"off\">\n          {typeForm === 'add' && (\n            <label htmlFor=\"transactionType\">\n              <CheckboxContainter>\n                <MoneyText\n                  style={\n                    transactionType === 'income'\n                      ? { color: '#24cca7' }\n                      : { color: '#E0E0E0' }\n                  }\n                >\n                  Income\n                </MoneyText>\n                <CheckboxField\n                  type=\"checkbox\"\n                  name=\"transactionType\"\n                  onChange={e => isIncomeHandler(e)}\n                  value={transactionType}\n                />\n\n                <MoneyText\n                  style={\n                    transactionType === 'expense'\n                      ? { color: '#FF6596' }\n                      : { color: '#E0E0E0' }\n                  }\n                >\n                  Expenses\n                </MoneyText>\n              </CheckboxContainter>\n            </label>\n          )}\n          {transactionType === 'expense' ? (\n            <label htmlFor=\"category\">\n              <CategorySelect name=\"category\" />\n            </label>\n          ) : (\n            ''\n          )}\n          <TabletWrapper>\n            <label htmlFor=\"amount\">\n              <TextField type=\"text\" min=\"0\" name=\"amount\" placeholder=\"0.00\" />\n              <ErrorMessage\n                name=\"amount\"\n                render={msg => {\n                  toast.error(`${msg}`, { toastId: String(new Date()) });\n                }}\n              />\n            </label>\n            <label htmlFor=\"date\" style={{ position: 'relative' }}>\n              <DatePicker name=\"date\" />\n              <CalendarIcon />\n            </label>\n          </TabletWrapper>\n          <label htmlFor=\"comment\">\n            <Comment name=\"comment\" placeholder=\"Comment\" minRows={4} />\n          </label>\n          <StyledButton type=\"submit\">\n            {typeForm === 'add' ? 'Add transaction' : 'Update transaction'}\n          </StyledButton>\n        </StyledForm>\n      </Formik>\n    </>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { TransactionForm } from 'components/TransactionForm/TransactionForm';\nimport { editTransOpen } from 'redux/modal/modal-selector';\nimport { isEditModalOpen } from 'redux/modal/modal-sclice';\nimport { Modal } from 'components/Modal/Modal';\n\nexport const ModalEdit = ({ updateTransaction }) => {\n  const isOpen = useSelector(editTransOpen);\n  const dispatch = useDispatch();\n  const toggleModal = () => {\n    dispatch(isEditModalOpen(!isOpen));\n    return {\n      type: 'modal/isEditModalOpen',\n    };\n  };\n  return (\n    <Modal heading=\"Edit transaction\" toggleModal={toggleModal} isOpen={isOpen}>\n      <TransactionForm typeForm=\"update\" transaction={updateTransaction} />\n    </Modal>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { removeTransaction } from 'redux/transactions/transactions-operation';\nimport { isDelModalOpen } from 'redux/modal/modal-sclice';\nimport { delModalOpen } from 'redux/modal/modal-selector';\nimport { StyledButton } from 'components/StyledButton/StyledButton';\nimport { Modal } from '../Modal/Modal';\n\nexport const ModalDelTransaction = ({ id }) => {\n  const isModalOpen = useSelector(delModalOpen);\n  const dispatch = useDispatch();\n\n  const toggleModal = () => {\n    dispatch(isDelModalOpen(!isModalOpen));\n    return {\n      type: 'modal/isDelModalOpen',\n    };\n  };\n  const handleClickOk = () => {\n    toggleModal();\n    dispatch(removeTransaction(id));\n  };\n\n  return (\n    <Modal\n      heading=\"Are you sure you want delete transaction?\"\n      toggleModal={toggleModal}\n      isOpen={isModalOpen}\n    >\n      <StyledButton type=\"submit\" onClick={handleClickOk}>\n        YES\n      </StyledButton>\n    </Modal>\n  );\n};\n","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport baseVars from 'stylesheet/vars';\nimport { EmptyContainer } from '../EmptyContainer/EmptyContainer';\nimport moment from 'moment';\nimport { Categories } from '../categories';\nimport EllipsisText from 'react-ellipsis-text';\nimport { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  fetchTransactions,\n  fetchTransactionById,\n} from 'redux/transactions/transactions-operation';\nimport { Delete, Edit } from '@mui/icons-material';\nimport { ModalEdit } from 'components/ModalEdit/ModalEdit';\nimport { ModalDelTransaction } from './../../ModalDelTransaction/ModalDelTransaction';\nimport { isEditModalOpen, isDelModalOpen } from 'redux/modal/modal-sclice';\nimport {\n  editTransOpen,\n  delModalOpen,\n} from '../../../redux/modal/modal-selector';\nconst MobileCard = ({ items }) => {\n  const dispatch = useDispatch();\n  const openEdit = useSelector(editTransOpen);\n  const openDel = useSelector(delModalOpen);\n  const [updateTransaction, setUpdateTransaction] = useState({});\n  const [deleteId, setDeleteId] = useState('');\n  const onRemoveTransaction = id => {\n    setDeleteId(id);\n    dispatch(isDelModalOpen(!openDel));\n  };\n\n  const onEditTransaction = async id => {\n    try {\n      const transaction = await dispatch(fetchTransactionById(id));\n      setUpdateTransaction(transaction.payload);\n    } catch (error) {\n      toast.error(`${error.msg}`);\n    }\n    const transaction = await dispatch(fetchTransactionById(id));\n    setUpdateTransaction(transaction.payload);\n    dispatch(isEditModalOpen(!openEdit));\n  };\n\n  const transactions = useSelector(state => state.transactions.items);\n\n  useEffect(() => {\n    dispatch(fetchTransactions(1));\n  }, [dispatch, transactions.transactionsTotalQuantity]);\n\n  return (\n    <>\n      {items?.length !== 0 ? (\n        <TransactionContainer>\n          {items?.map(\n            ({\n              date,\n              transactionType,\n              category,\n              comment,\n              amount,\n              balance,\n              _id,\n            }) => (\n              <TransactionList key={_id} color={transactionType}>\n                <ListItems>\n                  <TitleItems>Date</TitleItems>\n                  <TextItems>{moment.utc(date).format('DD.MM.YY')}</TextItems>\n                </ListItems>\n                <ListItems>\n                  <TitleItems>Type</TitleItems>\n                  {transactionType === 'income' ? (\n                    <TextItems>+</TextItems>\n                  ) : (\n                    <TextItems>-</TextItems>\n                  )}{' '}\n                </ListItems>\n                <ListItems>\n                  <TitleItems>Category</TitleItems>\n                  <TextItems>{Categories(category)}</TextItems>\n                </ListItems>\n                <ListItems>\n                  <TitleItems>Comment</TitleItems>\n                  <TextItems>\n                    <EllipsisText\n                      text={`${comment || '---'}`}\n                      length={17}\n                      tooltip=\"true\"\n                    />\n                  </TextItems>\n                </ListItems>\n                <ListItems>\n                  <TitleItems>Sum</TitleItems>\n                  {transactionType === 'income' ? (\n                    <SumText style={{ color: '#24CCA7' }}>\n                      {amount.toFixed(2)}\n                    </SumText>\n                  ) : (\n                    <SumText style={{ color: '#FF6596' }}>\n                      {amount.toFixed(2)}\n                    </SumText>\n                  )}\n                </ListItems>\n                <ListItems>\n                  <TitleItems>Balance</TitleItems>\n                  <TextItems>{balance.toFixed(2)}</TextItems>\n                </ListItems>\n                <ListItems>\n                  <Button onClick={() => onEditTransaction(_id)}>\n                    <EditIcon />\n                  </Button>\n                  <Button onClick={() => onRemoveTransaction(_id)}>\n                    <DeleteIcon />\n                  </Button>\n                </ListItems>\n              </TransactionList>\n            )\n          )}\n        </TransactionContainer>\n      ) : (\n        <EmptyContainer />\n      )}\n      {openEdit && (\n        <ModalEdit isOpen={openEdit} updateTransaction={updateTransaction} />\n      )}\n      {openDel && <ModalDelTransaction id={deleteId} />}\n    </>\n  );\n};\nMobileCard.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      _id: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired,\n      transactionType: PropTypes.string.isRequired,\n      category: PropTypes.number,\n      comment: PropTypes.string,\n      amount: PropTypes.number.isRequired,\n      balance: PropTypes.number.isRequired,\n    })\n  ),\n};\nexport default MobileCard;\n\nconst borderColor = type => {\n  switch (type) {\n    case 'expense':\n      return `${baseVars.colors.expensesText}`;\n    case 'income':\n      return `${baseVars.colors.incomeText}`;\n    default:\n      return `${baseVars.colors.secondText}`;\n  }\n};\n\nconst TransactionContainer = styled.div`\n  min-height: calc(100vh - 226px);\n  max-height: calc(100vh - 226px);\n  overflow: hidden;\n  overflow-y: scroll;\n  @media screen and (min-width: ${baseVars.sizeScreen.mobile}) {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\nconst TransactionList = styled.ul`\n  @media screen and (min-width: ${baseVars.sizeScreen.mobile}) {\n    box-sizing: border-box;\n    width: 280px;\n    list-style: none;\n    padding: 0px;\n    border-radius: 5px;\n    margin: 0px 20px 8px 20px;\n    background-color: ${baseVars.colors.secondText};\n    border-left: 5px solid;\n    border-color: ${({ color }) => borderColor(color)};\n  }\n`;\nconst ListItems = styled.li`\n  @media screen and (min-width: ${baseVars.sizeScreen.mobile}) {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 12px 20px 8px 20px;\n\n    :not(:last-child) {\n      border-bottom: 1px solid #dcdcdf;\n    }\n    :not(:first-child) {\n      padding-top: 12px;\n      padding-bottom: 8px;\n    }\n    :last-child {\n      padding-top: 8px;\n      justify-content: flex-end;\n    }\n  }\n`;\n\nconst TitleItems = styled.span`\n  @media screen and (min-width: ${baseVars.sizeScreen.mobile}) {\n    font-family: ${baseVars.fonts.main};\n    font-style: normal;\n    font-weight: 700;\n    font-size: 18px;\n    line-height: 27px;\n    color: ${baseVars.colors.mainText};\n  }\n`;\nconst TextItems = styled(TitleItems)`\n  @media screen and (min-width: ${baseVars.sizeScreen.mobile}) {\n    font-weight: 400;\n    font-size: 16px;\n    line-height: 24px;\n    text-align: right;\n  }\n`;\n\nconst SumText = styled(TextItems)`\n  @media screen and (min-width: ${baseVars.sizeScreen.mobile}) {\n    font-weight: 700;\n  }\n`;\n\nconst Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 24px;\n  height: 24px;\n  padding: 0;\n  border: none;\n  border-radius: 2px;\n  background-color: ${baseVars.colors.icon};\n  margin: 0;\n  cursor: pointer;\n  scale: 1;\n  transition: scale 250ms linear;\n\n  :not(:last-child) {\n    margin-right: 10px;\n  }\n\n  :hover {\n    scale: 1.2;\n    background-color: ${baseVars.colors.iconFocus};\n  }\n`;\n\nconst DeleteIcon = styled(Delete)`\n  color: ${baseVars.colors.secondText};\n  padding: 2px;\n`;\n\nconst EditIcon = styled(Edit)`\n  color: ${baseVars.colors.secondText};\n  padding: 2px;\n`;\n","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport baseVars from 'stylesheet/vars';\nimport { React } from 'react';\nimport { EmptyContainer } from '../EmptyContainer/EmptyContainer';\nimport moment from 'moment';\nimport { Categories } from '../categories';\nimport EllipsisText from 'react-ellipsis-text';\nimport { useState, useEffect } from 'react';\nimport {\n  editTransOpen,\n  delModalOpen,\n} from '../../../redux/modal/modal-selector';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  fetchTransactions,\n  fetchTransactionById,\n} from 'redux/transactions/transactions-operation';\nimport { ModalEdit } from 'components/ModalEdit/ModalEdit';\nimport { ModalDelTransaction } from './../../ModalDelTransaction/ModalDelTransaction';\nimport { Delete, Edit } from '@mui/icons-material';\nimport { toast } from 'react-toastify';\nimport { isEditModalOpen, isDelModalOpen } from 'redux/modal/modal-sclice';\n\nconst TabletTab = ({ items, columns }) => {\n  const dispatch = useDispatch();\n  const openEdit = useSelector(editTransOpen);\n  const openDel = useSelector(delModalOpen);\n  const [updateTransaction, setUpdateTransaction] = useState({});\n  const [deleteId, setDeleteId] = useState('');\n  const onRemoveTransaction = id => {\n    setDeleteId(id);\n    dispatch(isDelModalOpen(!openDel));\n  };\n\n  const onEditTransaction = async id => {\n    try {\n      const transaction = await dispatch(fetchTransactionById(id));\n      setUpdateTransaction(transaction.payload);\n    } catch (error) {\n      toast.error(`${error.msg}`);\n    }\n    const transaction = await dispatch(fetchTransactionById(id));\n    setUpdateTransaction(transaction.payload);\n    dispatch(isEditModalOpen(!openEdit));\n  };\n\n  const transactions = useSelector(state => state.transactions.items);\n\n  useEffect(() => {\n    dispatch(fetchTransactions(1));\n  }, [dispatch, transactions.transactionsTotalQuantity]);\n\n  return (\n    <>\n      {items?.length !== 0 ? (\n        <GeneralContainer>\n          <table>\n            <HeadContainer>\n              <HeadList>\n                {columns.map(colum => (\n                  <HeadTitles key={colum.accessor}>{colum.Header} </HeadTitles>\n                ))}\n              </HeadList>\n            </HeadContainer>\n          </table>\n          <TableWrapper>\n            <BodyTable>\n              <Tbody>\n                {items?.map(\n                  ({\n                    date,\n                    transactionType,\n                    category,\n                    comment,\n                    amount,\n                    balance,\n                    _id,\n                  }) => (\n                    <BodyList key={_id}>\n                      <BodyItems>\n                        {moment.utc(date).format('DD.MM.YY')}\n                      </BodyItems>\n                      <BodyItems>\n                        {transactionType === 'income' ? '+' : '-'}\n                      </BodyItems>\n                      <BodyItems>{Categories(category)}</BodyItems>\n                      <BodyItems>\n                        <EllipsisText\n                          text={`${comment || '---'}`}\n                          length={24}\n                          tooltip=\"true\"\n                        />\n                      </BodyItems>\n                      <BodyItems>\n                        {transactionType === 'income' ? (\n                          <SpanSum\n                            style={{ color: `${baseVars.colors.incomeText}` }}\n                          >\n                            {amount.toFixed(2)}\n                          </SpanSum>\n                        ) : (\n                          <SpanSum\n                            style={{ color: `${baseVars.colors.expensesText}` }}\n                          >\n                            {amount.toFixed(2)}\n                          </SpanSum>\n                        )}\n                      </BodyItems>\n                      <BodyItems>{balance.toFixed(2)}</BodyItems>\n                      <BodyItems>\n                        <Button onClick={() => onEditTransaction(_id)}>\n                          <EditIcon />\n                        </Button>\n                        <Button onClick={() => onRemoveTransaction(_id)}>\n                          <DeleteIcon />\n                        </Button>\n                      </BodyItems>\n                    </BodyList>\n                  )\n                )}\n              </Tbody>\n            </BodyTable>\n          </TableWrapper>\n        </GeneralContainer>\n      ) : (\n        <EmptyContainer />\n      )}\n      {openEdit && (\n        <ModalEdit isOpen={openEdit} updateTransaction={updateTransaction} />\n      )}\n      {openDel && <ModalDelTransaction id={deleteId} />}\n    </>\n  );\n};\n\nTabletTab.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      _id: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired,\n      transactionType: PropTypes.string.isRequired,\n      category: PropTypes.number,\n      comment: PropTypes.string,\n      amount: PropTypes.number.isRequired,\n      balance: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default TabletTab;\n\nconst GeneralContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  @media screen and (min-width: ${baseVars.sizeScreen.tablet}) {\n    width: 704px;\n    background-color: transparent;\n  }\n  @media screen and (min-width: ${baseVars.sizeScreen.desktop}) {\n    width: 715px;\n  }\n`;\nconst HeadContainer = styled.thead`\n  display: table-caption;\n  box-sizing: border-box;\n  height: 58px;\n  background-color: ${baseVars.colors.secondText};\n  padding: 16px 20px 15px 20px;\n  border-radius: 30px;\n`;\nconst HeadList = styled.tr`\n  display: flex;\n  justify-content: space-between;\n`;\nconst HeadTitles = styled.th`\n  font-family: ${baseVars.fonts.main};\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 27px;\n  text-align: start;\n  color: ${baseVars.colors.mainText};\n\n  :first-child {\n    width: 55px;\n  }\n  :nth-child(2) {\n    width: 65px;\n    text-align: center;\n  }\n  :nth-child(3) {\n    width: 135px;\n  }\n  :nth-child(4) {\n    width: 105px;\n  }\n  :nth-child(5) {\n    width: 85px;\n    text-align: right;\n  }\n  :nth-child(6) {\n    width: 85px;\n    text-align: right;\n    margin-right: 75px;\n  }\n`;\n\nconst TableWrapper = styled.div``;\n\nconst BodyTable = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  /* border: 1px solid #000; */\n`;\n\nconst Tbody = styled.tbody``;\n\nconst BodyList = styled.tr`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  font-family: ${baseVars.fonts.main};\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 1.5;\n  color: ${baseVars.colors.mainText};\n  padding-top: 14px;\n  padding-bottom: 14px;\n\n  :first-child {\n    padding-top: 16px;\n  }\n  :not(:last-child) {\n    border-bottom: 1px solid #dcdcdf;\n  }\n`;\nconst BodyItems = styled.td`\n  text-align: start;\n\n  :first-child {\n    width: 75px;\n    padding-left: 20px;\n  }\n  :nth-child(2) {\n    width: 65px;\n    text-align: center;\n  }\n  :nth-child(3) {\n    width: 135px;\n  }\n  :nth-child(4) {\n    width: 105px;\n  }\n  :nth-child(5) {\n    width: 85px;\n    text-align: right;\n  }\n  :nth-child(6) {\n    width: 85px;\n    text-align: right;\n  }\n  :nth-child(7) {\n    display: flex;\n  }\n  :hover {\n    z-index: 1;\n    overflow: visible;\n  }\n`;\n\nconst SpanSum = styled.span`\n  font-weight: 700;\n`;\n\nconst Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 24px;\n  height: 24px;\n  padding: 0;\n  border: none;\n  border-radius: 2px;\n  background-color: ${baseVars.colors.icon};\n  margin: 0;\n  margin-right: 10px;\n  cursor: pointer;\n  scale: 1;\n  transition: scale 250ms linear;\n\n  :hover {\n    scale: 1.2;\n    background-color: ${baseVars.colors.iconFocus};\n  }\n`;\n\nconst DeleteIcon = styled(Delete)`\n  color: ${baseVars.colors.secondText};\n  padding: 2px;\n`;\n\nconst EditIcon = styled(Edit)`\n  color: ${baseVars.colors.secondText};\n  padding: 2px;\n`;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  position: absolute;\n  bottom: 15px;\n  right: 0px;\n  background-color: ${props => props.theme.buttons.primary.bg};\n  width: 44px;\n  height: 44px;\n  border-radius: 50%;\n  outline: none;\n  border: none;\n  color: ${props => props.theme.buttons.primary.color};\n  font-size: 20px;\n  scale: 1;\n  cursor: pointer;\n  :hover {\n    scale: 1.2;\n    transition: scale 150ms linear;\n  }\n\n  @media (min-width: 768px) {\n    bottom: 20px;\n    right: 18px;\n  }\n\n  @media (min-width: 1280px) {\n    bottom: 20px;\n    right: 18px;\n  }\n`;\n","import { Button } from \"./ButtonCircle.styled\";\n\nexport const ButtonCircle = ({ children, onClick }) => {\n  return <Button onClick={onClick}>{children}</Button>;\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { TransactionForm } from 'components/TransactionForm/TransactionForm';\nimport { addModalOpen } from 'redux/modal/modal-selector';\nimport { isAddModalOpen } from 'redux/modal/modal-sclice';\nimport { Modal } from '../Modal/Modal';\n\nexport const ModalAddTransaction = () => {\n  const isModalOpen = useSelector(addModalOpen);\n  const dispatch = useDispatch();\n  const toggleModal = () => {\n    dispatch(isAddModalOpen(!isAddModalOpen));\n    return {\n      type: 'modal/isAddModalOpen',\n    };\n  };\n  return (\n    <Modal\n      heading=\"AddTransaciotn\"\n      toggleModal={toggleModal}\n      isOpen={isModalOpen}\n    >\n      <TransactionForm typeForm=\"add\" />\n    </Modal>\n  );\n};\n","export const getTransactions = ({ transactions }) => transactions.items;\n","export const COLUMNS = [\n  {\n    Header: \"Date\",\n    accessor: \"date\",\n  },\n  {\n    Header: \"Type\",\n    accessor: \"type\",\n  },\n  {\n    Header: \"Category\",\n    accessor: \"category\",\n  },\n  {\n    Header: \"Comment\",\n    accessor: \"comment\",\n  },\n  {\n    Header: \"Sum\",\n   accessor: \"sum\",\n  },\n  {\n    Header: \"Balance\",\n    accessor: \"balance\"\n  },\n];","import { React, Fragment, useEffect, useMemo, useState } from 'react';\nimport MobileCard from './MobileCard/MobileCard';\nimport TabletTab from './TabletTab/TabletTab';\nimport Media from 'react-media';\nimport { ButtonCircle } from 'components/ButtonCircle/ButtonCircle';\nimport { ModalAddTransaction } from 'components/ModalAddTransaction/ModalAddTransaction';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchTransactions } from 'redux/transactions/transactions-operation';\nimport { getTransactions } from 'redux/transactions/transactions-selector';\nimport { isAddModalOpen } from 'redux/modal/modal-sclice';\nimport { addModalOpen } from 'redux/modal/modal-selector';\nimport { COLUMNS } from './columns';\nimport { Pagination } from '@mui/material';\nimport styled from 'styled-components';\nimport baseVars from 'stylesheet/vars';\n\nconst HomeTab = () => {\n  const [page, setPage] = useState(1);\n  const [transactionsPerPage] = useState(10);\n  const columns = useMemo(() => COLUMNS, []);\n  const { result: data, transactionsTotalQuantity } =\n    useSelector(getTransactions);\n\n  const dispatch = useDispatch();\n\n  const isModalOpen = useSelector(addModalOpen);\n\n  const onModal = () => {\n    dispatch(isAddModalOpen(!isModalOpen));\n  };\n\n  useEffect(() => {\n    // console.log(page + \"!!!\")\n    dispatch(fetchTransactions(page));\n  }, [dispatch, page]);\n\n  const handleChange = (e, page) => {\n    setPage(page);\n  };\n  const totalPages = Math.ceil(transactionsTotalQuantity / transactionsPerPage);\n  const totalPagesInteger = totalPages ? totalPages : 1;\n\n  return (\n    <Con>\n      <Media\n        queries={{\n          small: '(max-width: 767px)',\n          medium: '(min-width: 768px) and (max-width: 1279px)',\n          large: '(min-width: 1280px)',\n        }}\n      >\n        {matches => (\n          <Fragment>\n            {matches.small && <MobileCard items={data} columns={columns} />}\n            {matches.medium && <TabletTab items={data} columns={columns} />}\n            {matches.large && <TabletTab items={data} columns={columns} />}\n            {transactionsTotalQuantity > 10 ? (\n              <Paginate\n                count={totalPagesInteger}\n                page={page}\n                onChange={handleChange}\n              />\n            ) : null}\n          </Fragment>\n        )}\n      </Media>\n\n      <ButtonCircle onClick={onModal}>+</ButtonCircle>\n      {isModalOpen && (\n        <ModalAddTransaction toggleModal={onModal} isOpen={isModalOpen} />\n      )}\n    </Con>\n  );\n};\n\nexport default HomeTab;\n\nconst Con = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  padding-bottom: 70px;\n\n  @media screen and (min-width: ${baseVars.sizeScreen.tablet}) {\n    height: 100%;\n    padding-bottom: 70px;\n  }\n\n  @media screen and (min-width: ${baseVars.sizeScreen.desktop}) {\n    padding-top: 32px;\n    align-items: flex-end;\n  }\n`;\nconst Paginate = styled(Pagination)`\n  position: absolute;\n  bottom: 20px;\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n  @media screen and (min-width: ${baseVars.sizeScreen.mobile}) {\n    width: 280px;\n  }\n  @media screen and (min-width: ${baseVars.sizeScreen.tablet}) {\n    width: 704px;\n  }\n  @media screen and (min-width: ${baseVars.sizeScreen.desktop}) {\n    width: 715px;\n  }\n`;\n"],"names":["EmptyContainer","Container","Text","styled","baseVars","Categories","id","StyledForm","Form","CheckboxContainter","CheckboxField","p","theme","color","switcherBgUncheked","radii","switcherBg","borderStyles","underline","buttons","primary","bg","broderSwitcher","borders","borderNone","fontSizes","muted","expense","shadows","switcherShadow","TextField","Field","fontWeights","normal","fonts","textField","placeholder","lineHeights","formField","MoneyText","bold","TabletWrapper","StyledComment","TextareaAutosize","Comment","props","useField","field","minRows","CalendarIcon","RiCalendar2Fill","calendarIcon","StyledDateTime","Datetime","DatePicker","name","useFormikContext","setFieldValue","values","configDatePicker","locale","value","date","inputProps","style","display","width","border","outline","marginBottom","paddingLeft","paddingBottom","borderBottom","fontFamily","fontStyle","fontWeight","fontSize","lineHeight","onChange","moment","utc","hadnleChange","dateFormat","timeFormat","closeOnSelect","StyledSelect","Select","StyledMenuItem","MenuItem","dropdownIcon","height","viewBox","fill","xmlns","d","stroke","MenuProps","PaperProps","background","boxShadow","backdropFilter","borderRadius","getCategories","state","categories","items","CategorySelect","dispatch","useDispatch","useEffect","fetchTransactionsCategories","useSelector","FormControl","variant","sx","m","marginRight","marginLeft","borderBottomWidth","labelId","displayEmpty","category","event","target","IconComponent","disabled","map","option","category_id","category_name","_id","TransactionForm","transaction","typeForm","initalTransactionType","transactionType","useState","setTransactonType","initialDate","initialValues","amount","comment","addTrasactionSchema","Yup","shape","required","max","handleSubmit","actions","rest","result","submitData","addTransaction","updateTransactionById","fetchBalance","alert","fetchTransactions","isAddModalOpen","isEditModalOpen","toast","message","resetForm","onSubmit","validationSchema","autoComplete","htmlFor","type","e","isChecked","checked","isIncomeHandler","min","render","msg","toastId","String","Date","position","StyledButton","S","ModalEdit","updateTransaction","isOpen","editTransOpen","Modal","heading","toggleModal","ModalDelTransaction","isModalOpen","delModalOpen","isDelModalOpen","onClick","removeTransaction","openEdit","openDel","setUpdateTransaction","deleteId","setDeleteId","onEditTransaction","fetchTransactionById","payload","transactions","transactionsTotalQuantity","length","TransactionContainer","balance","TransactionList","ListItems","TitleItems","TextItems","format","text","tooltip","SumText","toFixed","Button","EditIcon","DeleteIcon","borderColor","Delete","Edit","columns","GeneralContainer","HeadContainer","HeadList","colum","HeadTitles","Header","accessor","TableWrapper","BodyTable","Tbody","BodyList","BodyItems","SpanSum","ButtonCircle","children","ModalAddTransaction","addModalOpen","getTransactions","COLUMNS","page","setPage","transactionsPerPage","useMemo","data","onModal","handleChange","totalPages","Math","ceil","totalPagesInteger","Con","queries","small","medium","large","matches","Fragment","Paginate","count","Pagination"],"sourceRoot":""}