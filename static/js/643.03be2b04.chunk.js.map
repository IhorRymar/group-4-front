{"version":3,"file":"static/js/643.03be2b04.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import React , { useCallback, useState } from 'react';\nimport { useDispatch } from 'react-redux'\nimport { Formik } from 'formik'\nimport { Btn, Button, Container, Logotype, Icon, FormaRegistration, Label, Error} from \"./LoginForm.styled\";\nimport {login} from '../../redux/auth/auth-operations'\nimport { loginSchema } from '../../utils/validationsSchemas'\nimport sprite from '../../images/svg/sprite.svg'\nimport { Visibility, VisibilityOff, Lock } from '@mui/icons-material';\nimport { HiEnvelope } from \"react-icons/hi2\";\nimport { styled, IconButton, TextField } from '@mui/material';\n\n\n\nconst LoginForm = () => {\n  \n  const [showPassword, setShowPassword] = useState(false);\n  const dispatch = useDispatch();\n   const handleSubmit = ({ email, password }) => {\n     dispatch(login({ email, password }));\n   };\n  // const tooglePassword = () => { setShowPassword(!showPassword) }\n\n  const tooglePassword = useCallback(() => {\n    setShowPassword(prevShowPassword => !prevShowPassword);\n  }, []);\n  const handleMouseDownPassword = e => {\n    e.preventDefault();\n  }\n\n  return (\n    <div>\n      <Container>\n        <Logotype>\n          <Icon>\n            <use href={`${sprite}#icon-logo`}></use>\n          </Icon>\n        </Logotype>\n\n        <Formik\n         initialValues={{\n          password: \"\",\n          email: \"\",\n        }}\n        validateOnBlur\n        onSubmit={(values, { resetForm }) => {\n          handleSubmit(values);\n          resetForm();\n        }}\n        validationSchema={loginSchema}\n      >\n          {({\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            isValid,\n            handleSubmit,\n            dirty,\n          }) => (\n            <FormaRegistration>\n              <Label>\n                {touched.email && errors.email && (\n                <Error>{errors.email}</Error>\n              )}\n                <StyledTextField\n                  variant=\"filled\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  placeholder=\"E-mail\"\n                  type={`email`}\n                  name={`email`}\n                  size=\"small\"\n                  autoComplete=\"email\"\n                  color=\"primary\"\n                  autoFocus\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.email}\n                  InputProps={{ disableUnderline: true }}\n                />\n                <HiEnvelope\n                  style={{ position: 'absolute', left: '15px', bottom: '48px', color: '#E0E0E0', }}\n                  size=\"23px\"\n                />\n              </Label>\n\n              <Label>\n                {touched.password && errors.password && (\n                <Error>{errors.password}</Error>\n              )}\n                <StyledTextField\n                  type={showPassword ? 'text' : 'password'}\n                  name={`password`}\n                  placeholder=\"Password\"\n                  required\n                  fullWidth\n                  variant=\"filled\"\n                  margin=\"normal\"\n                  size=\"small\"\n                  autoComplete=\"current-password\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.password}\n                  InputProps={{disableUnderline: true }}\n                />\n                <Lock\n                  sx={{ position: 'absolute', left: '15px', bottom: '48px', color: '#E0E0E0', }}\n                />\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  sx={{ position: 'absolute', right: '0', color: '#E0E0E0', }}\n                  onClick={tooglePassword}\n                  onMouseDown={handleMouseDownPassword}\n                >\n                  {showPassword ? <Visibility /> : <VisibilityOff />}\n                </IconButton>\n              </Label>\n              <Btn\n                disabled={!isValid || !dirty}\n                type={`submit`}>\n                LOG IN\n              </Btn>\n            \n              <Button\n                to=\"/register\"\n                style={{ textDecoration: \"none\" }}>\n                REGISTER\n              </Button>\n            </FormaRegistration>\n          )}\n        </Formik>\n      </Container>\n    </div>\n  )\n}\n\nconst StyledTextField = styled(TextField)({\n  width: '280px',\n  margin: '0 0 40px',\n\n  '@media screen and (min-width: 768px)': {\n    width: '100%',\n  },\n\n  '& .MuiFilledInput-root': {\n    display: 'flex',\n    alignItems: 'center',\n    backgroundColor: '#fff',\n    borderBottom: '1px solid #E0E0E0',\n    padding: '0',\n  },\n\n  '& .Mui-focused .MuiFilledInput-root': {\n    backgroundColor: '#fff',\n  },\n\n  '& .MuiFilledInput-input': {\n    padding: '8px 40px 8px 54px',\n  },\n});\n\nexport default LoginForm\n\n\n\n\n\n\n\n\n\n\n","import React from 'react'\nimport Media from 'react-media'\nimport LoginForm from '../../components/LoginForm/LoginForm'\nimport { Title, WrapperImg, FormLogin, Img, Container } from './LoginPage.styled'\nimport { mediaQueries } from '../../utils'\nimport signinImg from '../../images/photo/signin-img.png'\nimport Background from 'components/PageContainer/Background/Background';\n\nconst LoginPage = () => {\n  return (\n    <Background>\n      <Container>\n        <Media queries={mediaQueries}>\n          {(matches) => (\n            <>\n              {matches.tablet && (\n                <WrapperImg>\n                  <Img\n                    src={signinImg}\n                    alt=\"a man with a shopping cart\"\n                  ></Img>  \n                  <Title>Finance App</Title>\n                </WrapperImg>\n              )}\n              {matches.desktop && (\n                <WrapperImg>\n                  <Img\n                    src={signinImg}\n                    alt=\"A man with a cart of groceries\"\n                  ></Img>  \n                  <Title>Finance App</Title>\n                </WrapperImg>\n              )}\n            </>\n          )}\n        </Media>\n\n        <FormLogin >\n          <LoginForm />\n        </FormLogin>\n      </Container>\n    </Background>\n  )\n}\n\nexport default LoginPage"],"names":["StyledTextField","styled","TextField","width","margin","display","alignItems","backgroundColor","borderBottom","padding","useState","showPassword","setShowPassword","dispatch","useDispatch","tooglePassword","useCallback","prevShowPassword","handleMouseDownPassword","e","preventDefault","href","sprite","initialValues","password","email","validateOnBlur","onSubmit","values","resetForm","login","handleSubmit","validationSchema","loginSchema","errors","touched","handleChange","handleBlur","isValid","dirty","variant","required","fullWidth","placeholder","type","name","size","autoComplete","color","autoFocus","onChange","onBlur","value","InputProps","disableUnderline","style","position","left","bottom","Lock","sx","IconButton","right","onClick","onMouseDown","Visibility","VisibilityOff","disabled","to","textDecoration","Background","queries","mediaQueries","matches","tablet","src","signinImg","alt","desktop"],"sourceRoot":""}