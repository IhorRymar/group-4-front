{"version":3,"file":"static/js/995.b408e562.chunk.js","mappings":"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","sources":["images/svg/ellipse-purple.svg","images/svg/ellipse-peach.svg","components/PageContainer/PageContainer.styled.jsx","components/PageContainer/PageContainer.jsx","components/HomeTab/EmptyContainer/EmptyContainer.jsx","components/HomeTab/categories.jsx","components/HomeTab/MobileCard/MobileCard.jsx","components/HomeTab/TabletTab/TabletTab.jsx","redux/transactions/transactions-selector.js","components/HomeTab/columns.js","components/HomeTab/HomeTab.jsx","components/ButtonCircle/ButtonCircle.styled.jsx","components/ButtonCircle/ButtonCircle.jsx","components/ModalAddTransaction/ModalAddTransaction.styled.jsx","components/StyledButton/StyledButton.styled.jsx","components/StyledButton/StyledButton.jsx","components/AddTransactionForm/AddTransactionForm.styled.jsx","components/Comment/Comment.styled.jsx","components/Comment/Comment.jsx","components/DatePicker/DatePicker.js","redux/categories/categories-selector.js","components/CategorySelect/CategorySelect.js","components/AddTransactionForm/AddTransactionForm.jsx","components/ModalAddTransaction/ModalAddTransaction.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgEllipsePurple(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 496,\n    height: 333,\n    viewBox: \"0 0 496 333\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M426.671 362.925C349.878 493.555 192.436 523.277 54.0872 488.134C-105.334 439.813 -170.538 270.69 -125.016 120.504C-82.7835 -18.8283 83.0818 19.3577 220.438 3.49611C474.794 -23.8102 573.649 131.918 426.671 362.925Z\",\n    fill: \"#C5BAFF\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgEllipsePurple);\nexport default __webpack_public_path__ + \"static/media/ellipse-purple.e7cbaa19930a91cc921b259fee050777.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgEllipsePeach(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 552,\n    height: 383,\n    viewBox: \"0 0 552 383\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M552.107 266.556C464.047 389.872 304.59 405.532 169.898 358.273C15.3836 296.022 -34.5854 121.79 24.0596 -23.7743C78.4665 -158.819 240.298 -106.092 378.52 -109.726C634.294 -114.397 718.967 49.4746 552.107 266.556Z\",\n    fill: \"#FFD8D0\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgEllipsePeach);\nexport default __webpack_public_path__ + \"static/media/ellipse-peach.67efe2beefff5419592e10e36bf84721.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\nimport purpleEllipse from '../../images/svg/ellipse-purple.svg';\nimport peachEllipse from '../../images/svg/ellipse-peach.svg';\n\nexport const Background = styled.div`\n  width: 100%;\n  min-height: 100vh;\n  background-color: #e7eaf2;\n  @media (min-width: 768px) {\n    background-image: url(${purpleEllipse}), url(${peachEllipse});\n    background-repeat: no-repeat, no-repeat;\n    background-position: left bottom, top right;\n  }\n`;\n\nexport const Backdrop = styled.div`\n  background-color: rgba(255, 255, 255, 0.4);\n  backdrop-filter: blur(25px);\n`;\n\nexport const Container = styled.div`\n  width: 100%;\n  padding: 0 20px;\n  margin: 0 auto;\n\n  @media (min-width: 768px) {\n    padding: 0 32px;\n  }\n\n  @media (min-width: 1280px) {\n    width: 1280px;\n    padding: 0 18px;\n  }\n`;","import { Background, Backdrop, Container } from \"./PageContainer.styled\";\n\nconst PageContainer = ({ children }) => {\n  return (\n    <Background>\n      <Backdrop>\n        <Container>{children}</Container>\n      </Backdrop>\n    </Background>\n    \n  )\n};\n\nexport default PageContainer;","import styled from \"styled-components\";\nimport baseVars from \"stylesheet/vars\";\n\nexport const EmptyContainer = () => { \n    return (\n        <Container>\n            <Text>No transactions</Text>\n        </Container>\n    )\n}\nconst Container = styled.div`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nmargin: 0 auto;\nbackground-color: transparent;\nborder: 1px solid #DCDCDF;\n@media screen and (min-width: ${baseVars.sizeScreen.mobile}) {\n    width:280px;\n    height:282px;}\n@media screen and (min-width: ${baseVars.sizeScreen.tablet}) {\n   width:704px;\n  height:312px;\n  }\n@media screen and (min-width: ${baseVars.sizeScreen.desktop}) {\n  width: 715px;\n  }\n`;\nconst Text = styled.p`\n   font-family: ${ baseVars.fonts.main};\nfont-style: normal;\nfont-weight: 700;\nfont-size: 30px;\nline-height: 18px;\ncolor: #DCDCDF; \n`;\n","export const Categories = id => {\n  switch (id) {\n    case 0:\n      return  \"Main expenses\";\n    case 1:\n      return \"Products\";\n     case 2:\n      return \"Car\";\n    case 3:\n      return \"Self care\";\n     case 4:\n      return \"Child care\";\n    case 5:\n      return \"Household products\";\n     case 6:\n      return \"Education\";\n    case 7:\n      return \"Leisure\";\n     case 8:\n      return \"Entertainment\";\n    case 9:\n      return \"Help UA Armed Force\";\n    case 999:\n      return \"Other expenses\";\n    default:\n      return \"---\";\n  }\n};\n","import styled from \"styled-components\";\nimport PropTypes from 'prop-types';\nimport baseVars from \"stylesheet/vars\";\nimport { EmptyContainer } from \"../EmptyContainer/EmptyContainer\";\nimport moment from 'moment';\nimport { Categories } from \"../categories\";\nimport EllipsisText from \"react-ellipsis-text\";\n\nconst MobileCard = ({ items}) => {\n\n const date = items?.length ? items?.map(item => item) : null;\n  const data = date?.sort((a, b) =>\n    b.date\n      .split('.')\n      .reverse()\n      .join()\n      .localeCompare(a.date.split('.').reverse().join())\n  );\n \n  return (\n  <>\n      {\n        items?.length !== 0 ?\n          <TransactionContainer>\n            {data?.map(({ date, transactionType, category, comment, amount, balance, _id }) => (\n              <TransactionList key={_id} color={transactionType}>\n                <ListItems><TitleItems>Date</TitleItems><TextItems>{moment.utc(date).format('DD.MM.YY')}</TextItems></ListItems>\n                <ListItems><TitleItems>Type</TitleItems>{transactionType === \"income\" ? <TextItems>+</TextItems> : <TextItems>-</TextItems>} </ListItems>\n                <ListItems><TitleItems>Category</TitleItems><TextItems>{Categories(category)}</TextItems></ListItems>\n                <ListItems><TitleItems>Comment</TitleItems><TextItems><EllipsisText text={`${comment  || \"---\"}`} length={17} tooltip=\"true\" /></TextItems></ListItems>\n                <ListItems><TitleItems>Sum</TitleItems>\n                  {transactionType === \"income\" ?\n                    <SumText style={{ color: \"#24CCA7\" }}>{amount.toFixed(2)}</SumText> :\n                    <SumText style={{ color: \"#FF6596\" }}>{amount.toFixed(2)}</SumText>}</ListItems>\n                <ListItems><TitleItems>Balance</TitleItems><TextItems>{balance.toFixed(2)}</TextItems></ListItems>\n              </TransactionList>\n            ))}\n                 \n          </TransactionContainer> : <EmptyContainer />}\n   \n   </> )\n}\nMobileCard.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n        _id: PropTypes.string.isRequired,\n        date: PropTypes.string.isRequired,\n        transactionType: PropTypes.string.isRequired,\n        category: PropTypes.number,\n        comment: PropTypes.string,\n        amount: PropTypes.number.isRequired,\n        balance: PropTypes.number.isRequired,\n    }),\n  ),\n};\nexport default MobileCard;\n\nconst borderColor = type => {\n  switch (type) {\n    case 'expense':\n      return `${ baseVars.colors.expensesText}`;\n    case 'income':\n      return `${ baseVars.colors.incomeText}`;\n    default:\n      return `${ baseVars.colors.secondText}`;\n  }\n};\n\nconst TransactionContainer = styled.div`\n @media screen and (min-width: ${baseVars.sizeScreen.mobile}) {\n    display:flex;\n    flex-direction: column;\n    align-items:center;\n    margin-top: 32px;\n    background-color: #DCDCDF;\n }  \n`;\n\nconst TransactionList = styled.ul`\n@media screen and (min-width: ${baseVars.sizeScreen.mobile}) {\n    box-sizing: border-box;\n    width:280px;\n    height:282px;\n    list-style: none;\n    padding: 0px;\n    border-radius:5px ;\n    margin: 0px 20px 8px 20px;\n    background-color: ${ baseVars.colors.secondText};\n    border-left: 5px solid ;\n    border-color: ${({ color }) => borderColor(color) }; \n}        \n`;\nconst ListItems = styled.li`\n@media screen and (min-width: ${baseVars.sizeScreen.mobile}) {\n     display:flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 12px 20px 8px 20px;\n       \n    :not(:last-child) {\n        border-bottom: 1px solid #DCDCDF;\n    }\n    :not(:first-child) {\n        padding-top:12px;\n        padding-bottom:8px;\n    }\n} \n`;\n\nconst TitleItems = styled.span`\n@media screen and (min-width: ${baseVars.sizeScreen.mobile}) {\n    font-family: ${ baseVars.fonts.main};\nfont-style: normal;\nfont-weight: 700;\nfont-size: 18px;\nline-height: 27px;\ncolor: ${ baseVars.colors.mainText};\n}\n`\nconst TextItems = styled(TitleItems)`\n@media screen and (min-width: ${baseVars.sizeScreen.mobile}) {\nfont-weight: 400;\nfont-size: 16px;\nline-height: 24px;\ntext-align: right;\n}\n`;\n\nconst SumText = styled(TextItems)`\n@media screen and (min-width: ${baseVars.sizeScreen.mobile}) {\n    font-weight: 700;\n}\n`;\n","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport baseVars from 'stylesheet/vars';\nimport { React } from 'react';\nimport { EmptyContainer } from '../EmptyContainer/EmptyContainer';\nimport moment from 'moment';\nimport { Categories } from '../categories';\nimport EllipsisText from 'react-ellipsis-text';\n\nconst TabletTab = ({ items, columns }) => {\n  const date = items?.length ? items?.map(item => item) : null;\n  const data = date?.sort((a, b) =>\n    b.date\n      .split('.')\n      .reverse()\n      .join()\n      .localeCompare(a.date.split('.').reverse().join())\n  );\n\n  return (\n    <>\n      {items?.length !== 0 ? (\n        <GeneralContainer>\n          <table>\n            <HeadContainer>\n              <HeadList>\n                {columns.map(colum => (\n                  <HeadTitles key={colum.accessor}>{colum.Header} </HeadTitles>\n                ))}\n              </HeadList>\n            </HeadContainer>\n          </table>\n          <BodyContainer>\n            <BodyTable>\n              <tbody>\n                {data?.map(\n                  ({\n                    date,\n                    transactionType,\n                    category,\n                    comment,\n                    amount,\n                    balance,\n                    _id,\n                  }) => (\n                    <BodyList key={_id}>\n                      <BodyItems>\n                        {moment.utc(date).format('DD.MM.YY')}\n                      </BodyItems>\n                      <BodyItems>\n                        {transactionType === 'income' ? '+' : '-'}\n                      </BodyItems>\n                      <BodyItems>{Categories(category)}</BodyItems>\n                      <BodyItems>\n                        <EllipsisText\n                          text={`${comment || '---'}`}\n                          length={24}\n                          tooltip=\"true\"\n                        />\n                      </BodyItems>\n                      <BodyItems>\n                        {transactionType === 'income' ? (\n                          <SpanSum\n                            style={{ color: `${baseVars.colors.incomeText}` }}\n                          >\n                            {amount.toFixed(2)}\n                          </SpanSum>\n                        ) : (\n                          <SpanSum\n                            style={{ color: `${baseVars.colors.expensesText}` }}\n                          >\n                            {amount.toFixed(2)}\n                          </SpanSum>\n                        )}\n                      </BodyItems>\n                      <BodyItems>{balance.toFixed(2)}</BodyItems>\n                    </BodyList>\n                  )\n                )}\n              </tbody>\n            </BodyTable>\n          </BodyContainer>\n        </GeneralContainer>\n      ) : (\n        <EmptyContainer />\n      )}\n    </>\n  );\n};\n\nTabletTab.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      _id: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired,\n      transactionType: PropTypes.string.isRequired,\n      category: PropTypes.number,\n      comment: PropTypes.string,\n      amount: PropTypes.number.isRequired,\n      balance: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default TabletTab;\n\nconst GeneralContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  @media screen and (min-width: ${baseVars.sizeScreen.tablet}) {\n    width: 704px;\n    height: 312px;\n    margin: 20px 32px 0px 32px;\n    background-color: transparent;\n  }\n  @media screen and (min-width: ${baseVars.sizeScreen.desktop}) {\n    width: 715px;\n    margin: 46px 16px 0px 69px;\n  }\n`;\nconst HeadContainer = styled.thead`\n  display: table-caption;\n  box-sizing: border-box;\n  height: 58px;\n  background-color: ${baseVars.colors.secondText};\n  padding: 16px 20px 15px 20px;\n  border-radius: 30px;\n`;\nconst HeadList = styled.tr`\n  display: flex;\n  justify-content: space-between;\n`;\nconst HeadTitles = styled.th`\n  font-family: ${baseVars.fonts.main};\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 27px;\n  text-align: start;\n  color: ${baseVars.colors.mainText};\n  @media screen and (min-width: ${baseVars.sizeScreen.tablet}) {\n    width: 14.5%;\n  }\n  @media screen and (min-width: ${baseVars.sizeScreen.desktop}) {\n    width: 13.5%;\n  }\n  :first-child {\n    width: 12%;\n  }\n  :nth-child(2) {\n    width: 16.2%;\n    text-align: center;\n  }\n  :nth-child(4) {\n    width: 17%;\n  }\n  :nth-child(5) {\n    width: 14.8%;\n  }\n  :nth-child(6) {\n    width: 14.6%;\n  }\n  :nth-last-child(-n + 2) {\n    text-align: end;\n  }\n`;\nconst BodyContainer = styled.div`\n  height: 254px;\n  overflow-y: scroll;\n  ::-webkit-scrollbar {\n    width: 10px;\n    background-color: transparent;\n  }\n  ::-webkit-scrollbar-thumb {\n    background-color: #e7eaf2;\n    border-radius: 9em;\n    box-shadow: inset 1px 1px 10px #f3faf7;\n  }\n`;\nconst BodyTable = styled.table`\n  display: flex;\n  border-collapse: collapse;\n  justify-content: center;\n`;\nconst BodyList = styled.tr`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 656px;\n  font-family: ${baseVars.fonts.main};\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 18px;\n  color: ${baseVars.colors.mainText};\n  padding-top: 10px;\n  padding-bottom: 10px;\n  @media screen and (min-width: ${baseVars.sizeScreen.desktop}) {\n    width: 675px;\n  }\n  :first-child {\n    margin-top: 16px;\n    padding-top: 0px;\n  }\n  :not(:last-child) {\n    border-bottom: 1px solid #dcdcdf;\n  }\n`;\nconst BodyItems = styled.td`\n  max-height: 36px;\n  text-align: start;\n  @media screen and (min-width: ${baseVars.sizeScreen.tablet}) {\n    width: 14.5%;\n  }\n  @media screen and (min-width: ${baseVars.sizeScreen.desktop}) {\n    width: 13.5%;\n  }\n  :first-child {\n    width: 12%;\n  }\n  :nth-child(2) {\n    width: 16.2%;\n    text-align: center;\n  }\n  :nth-child(4) {\n    width: 17%;\n  }\n  :nth-child(5) {\n    width: 14.8%;\n  }\n  :nth-child(6) {\n    width: 14.6%;\n  }\n  :nth-last-child(-n + 2) {\n    text-align: end;\n  }\n  :hover {\n    z-index: 1;\n    overflow: visible;\n  }\n`;\nconst SpanSum = styled.span`\n  font-weight: 700;\n`;\n","export const getTransactions = ({ transactions }) => transactions.items;\n","export const COLUMNS = [\n  {\n    Header: \"Date\",\n    accessor: \"date\",\n  },\n  {\n    Header: \"Type\",\n    accessor: \"type\",\n  },\n  {\n    Header: \"Category\",\n    accessor: \"category\",\n  },\n  {\n    Header: \"Comment\",\n    accessor: \"comment\",\n  },\n  {\n    Header: \"Sum\",\n   accessor: \"sum\",\n  },\n  {\n    Header: \"Balance\",\n    accessor: \"balance\"\n  },\n];","import { React, Fragment,useEffect, useMemo, useState } from \"react\";\nimport MobileCard from \"./MobileCard/MobileCard\";\nimport TabletTab from \"./TabletTab/TabletTab\";\nimport Media from 'react-media';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchTransactions} from 'redux/transactions/transactions-operation';\nimport { getTransactions } from 'redux/transactions/transactions-selector';\nimport { COLUMNS } from './columns'\nimport { Pagination } from '@mui/material';\nimport styled from 'styled-components';\nimport baseVars from 'stylesheet/vars';\n\n\nconst HomeTab = () => { \n  const [page, setPage] = useState(1);\n  const [transactionsPerPage] = useState(10);\n  const columns = useMemo(() => COLUMNS, []);\n  const { result: data, transactionsTotalQuantity } = useSelector(getTransactions);\n  \n  const dispatch = useDispatch();\n \n  useEffect(() => {\n    // console.log(page + \"!!!\")\n     dispatch(fetchTransactions(page));\n  }, [dispatch, page]);\n  \n\n  const handleChange = (e, page) => {\n  setPage(page)\n}\n  const totalPages = Math.ceil(transactionsTotalQuantity / transactionsPerPage)\n  const totalPagesInteger =  totalPages ? totalPages : 1\n  // console.log(totalPages)\n  \n  return (\n      <Con>\n            <Media queries={{\n          small: \"(max-width: 767px)\",\n          medium: \"(min-width: 768px) and (max-width: 1279px)\",\n          large: \"(min-width: 1280px)\"\n            }}>\n                {matches => (\n            <Fragment>\n              {matches.small && <MobileCard items={data} columns={columns} />}\n            {matches.medium && <TabletTab items={data} columns={columns}   />}\n            {matches.large && <TabletTab items={data} columns={columns} />}\n            <Paginate  count={totalPagesInteger} page={page} onChange={handleChange} />\n            </Fragment>\n          )}\n      </Media>\n    \n    \n    </Con>\n    )\n}\n\nexport default HomeTab\n\nconst Con = styled.div`\n display:flex;\n flex-direction: column;\n`\nconst Paginate = styled(Pagination)`\n  display:flex;\n  justify-content: flex-end;\n  margin-top: 20px;\n  @media screen and (min-width: ${baseVars.sizeScreen.mobile}) {\n    width:320px;}\n  @media screen and (min-width: ${baseVars.sizeScreen.tablet}) {\n    width: 704px;}\n    @media screen and (min-width: ${baseVars.sizeScreen.desktop}) {\n    width: 768px;}\n`","import styled from \"styled-components\";\n\nexport const Button = styled.button`\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  background-color: ${(props) => props.theme.buttons.primary.bg};\n  width: 44px;\n  height: 44px;\n  border-radius: 50%;\n  outline: none;\n  border: none;\n  color: ${(props) => props.theme.buttons.primary.color};\n  font-size: 20px;\n  cursor: pointer;\n`;\n","import { Button } from \"./ButtonCircle.styled\";\n\nexport const ButtonCircle = ({ children, onClick }) => {\n  return <Button onClick={onClick}>{children}</Button>;\n};\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.3);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const ModalWindow = styled.div`\n  @media screen and (max-width: 767px) {\n    width: 320px;\n    padding: 20px;\n    background-color: #fff;\n  }\n  width: 540px;\n  border-radius: 20px;\n  padding: 20px;\n  background-color: #fff;\n`;\n\nexport const Heading = styled.h1`\n  font-weight: ${p => p.theme.fontWeights.normal};\n  line-height: ${p => p.theme.lineHeights.heading};\n  font-family: ${p => p.theme.fonts.heading};\n  text-align: center;\n`;\n","import styled from 'styled-components';\n\nexport const MainButton = styled.button`\n  width: 100%;\n  height: 50px;\n  margin-bottom: ${p => {\n    if (p.type === 'submit') {\n      return p.theme.buttons.primary.mb;\n    } else {\n      return;\n    }\n  }};\n  border-radius: 20px;\n  background-color: ${p => {\n    if (p.type === 'submit') {\n      return p.theme.buttons.primary.bg;\n    } else {\n      return p.theme.buttons.secondary.bg;\n    }\n  }};\n  color: ${p => {\n    if (p.type === 'submit') {\n      return p.theme.buttons.primary.color;\n    } else {\n      return p.theme.buttons.secondary.color;\n    }\n  }};\n  cursor: pointer;\n  border: ${p => {\n    if (p.type === 'submit') {\n      return 'none';\n    } else {\n      return p.theme.buttons.secondary.border;\n    }\n  }};\n`;\n","import { MainButton } from './StyledButton.styled';\n\nexport const StyledButton = ({ type, children, onClick }) => {\n  return (\n    <MainButton type={type} onClick={onClick}>\n      {children}\n    </MainButton>\n  );\n};\n","import styled from 'styled-components';\n\nimport { Field, Form } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  label > input {\n    margin-bottom: 40px;\n  }\n`;\n\nexport const CheckboxContainter = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  min-height: 44px;\n  transform: translate(-50%, -50%);\n  margin-top: 40px;\n  left: 50%;\n`;\n\nexport const CheckboxField = styled.input`\n  appearance: none;\n  width: 80px;\n  height: 40px;\n  background-color: white;\n  position: relative;\n  border-radius: 30px;\n  transition: 0.3s;\n  cursor: pointer;\n  border: 1px solid #e0e0e0;\n  outline: none;\n\n  :before {\n    content: '+';\n    position: absolute;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: ${props => props.theme.buttons.primary.bg};\n    width: 44px;\n    height: 44px;\n    border-radius: 50%;\n    outline: none;\n    border: none;\n    color: ${props => props.theme.buttons.primary.color};\n    font-size: 20px;\n    left: -4px;\n    top: -2px;\n    transition: 0.6s;\n    filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\n  }\n\n  :checked {\n    background-color: #ececec;\n\n    :before {\n      content: '-';\n      background: #ff6596;\n      box-shadow: 0px 6px 15px rgba(255, 101, 150, 0.5);\n      left: 40px;\n    }\n  }\n`;\n\nexport const TextField = styled(Field)`\n  box-sizing: border-box;\n  border: none;\n  border-bottom: 1px solid ${p => p.theme.color.muted};\n  width: 100%;\n  padding-left: 14px;\n  padding-right: 14px;\n  padding-bottom: 8px;\n\n  outline: none;\n\n  ::placeholder {\n    color: ${p => p.theme.color.muted};\n  }\n`;\n\nexport const MoneyText = styled.span`\n  font-family: 'Circe, sans-serif';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n  margin-right: 24px;\n  margin-left: 20px;\n`;\n\nexport const Dropdown = styled(Field)`\n  width: 100%;\n  border: none;\n`;\n","import styled from \"styled-components\";\nimport TextareaAutosize from \"@mui/material/TextareaAutosize\";\n\nexport const StyledComment = styled(TextareaAutosize)`\n  width: 100%;\n  border: none;\n  border-bottom: ${(p) => p.theme.radii.borderBottom};\n  margin-bottom: 40px;\n`;\n","import { StyledComment } from './Comment.styled';\nimport { useField } from 'formik';\nexport const Comment = ({ ...props }) => {\n  const [field] = useField(props);\n  return <StyledComment minRows={3} {...field} {...props} />;\n};\n","import Datetime from \"react-datetime\";\nimport moment from \"moment\";\nimport \"moment/locale/uk\";\nimport \"react-datetime/css/react-datetime.css\";\nimport { useFormikContext } from \"formik\";\n\nexport const DatePicker = ({ name }) => {\n  const {\n    setFieldValue,\n    values: { date },\n  } = useFormikContext();\n  const hadnleChange = (value) => {\n    setFieldValue(name, moment(value).format(\"DD.MM.YYYY\"));\n  };\n  let configDatePicker = {\n    locale: \"uk\",\n    tomeFormat: false,\n    name,\n    value: { date },\n  };\n\n  let inpuProps = {\n    style: {\n      width: \"100%\",\n      border: \"none\",\n      outline: \"none\",\n      marginBottom: 40,\n      paddingLeft: 14,\n      paddingBottom: \"8px\",\n      borderBottom: \"1px solid #E0E0E0\",\n    },\n  };\n\n  return (\n    <Datetime\n      {...configDatePicker}\n      inputProps={inpuProps}\n      onChange={(value) => hadnleChange(value)}\n      dateFormat=\"DD.MM.YYYY\"\n      timeFormat={false}\n      closeOnSelect={true}\n    />\n  );\n};\n","export const getCategories = state => state.categories.items;\n","import * as React from 'react';\n\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport { useState } from 'react';\nimport { useFormikContext } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchTransactionsCategories } from 'redux/categories/categories-operations';\nimport { useEffect } from 'react';\nimport { getCategories } from 'redux/categories/categories-selector';\n\nexport default function CategorySelect({ name }) {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchTransactionsCategories());\n  }, [dispatch]);\n\n  const categories = useSelector(getCategories);\n\n  // const categories = {\n  //   'Main expenses': 0,\n  //   Products: 1,\n  //   Car: 2,\n  //   'Self care': 3,\n  //   'Child care': 4,\n  //   'Household products': 5,\n  //   Education: 6,\n  //   Leisure: 6,\n  //   'Other expenses': 8,\n  //   Entertainment: 9,\n  // };\n  const [category, setCategory] = useState('');\n  const { setFieldValue } = useFormikContext();\n\n  const handleChange = event => {\n    setCategory(event.target.value);\n    setFieldValue(name, event.target.value);\n    console.log(category);\n  };\n\n  return (\n    <FormControl\n      variant=\"standard\"\n      sx={{\n        m: 1,\n        width: '100%',\n        marginBottom: '40px',\n        marginRight: 0,\n        marginLeft: 0,\n        fontSize: '12px',\n        borderBottomWidth: '1px',\n        // borderBottom: `1px solid ${(p) => p.theme.color.muted}`,\n      }}\n    >\n      <Select\n        labelId=\"category\"\n        id=\"category\"\n        value={category}\n        onChange={handleChange}\n      >\n        {categories.map(option => {\n          return (\n            <MenuItem key={option._id} value={option.category_id}>\n              {option.category_name}\n            </MenuItem>\n          );\n        })}\n      </Select>\n    </FormControl>\n  );\n}\n","import { ErrorMessage, Formik } from 'formik';\nimport { useState } from 'react';\nimport moment from 'moment';\nimport { toast } from 'react-toastify';\nimport { addTransaction } from 'services/transactions';\nimport * as Yup from 'yup';\nimport {\n  CheckboxContainter,\n  CheckboxField,\n  MoneyText,\n  StyledForm,\n  TextField,\n} from './AddTransactionForm.styled';\nimport { Comment } from 'components/Comment/Comment';\nimport { DatePicker } from '../DatePicker/DatePicker';\nimport CategorySelect from '../CategorySelect/CategorySelect';\nimport { StyledButton } from '../StyledButton/StyledButton';\nimport { useDispatch } from 'react-redux';\n\nexport const AddTransactionForm = ({ toggleModal }) => {\n  moment.updateLocale('uk');\n  const initialDate = moment().format('DD.MM.YYYY');\n  const [transactionType, setTransactonType] = useState('income');\n  const isIncomeHandler = e => {\n    let isChecked = e.target.checked;\n    isChecked ? setTransactonType('expense') : setTransactonType('income');\n  };\n\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    transactionType: { transactionType },\n    date: initialDate,\n    amount: '',\n    category: '',\n    comment: '',\n  };\n\n  const addTrasactionSchema = Yup.object().shape({\n    category: Yup.string().required(),\n    amount: Yup.number().required(),\n    date: Yup.date().required(),\n    comment: Yup.string().max(50),\n  });\n\n  const handleSubmit = async (\n    { transactionType, category, ...rest },\n    actions\n  ) => {\n    let result =\n      category === 'expense'\n        ? { ...transactionType, category, ...rest }\n        : { ...transactionType, ...rest };\n\n    console.log(result);\n\n    await dispatch(addTransaction(result));\n    actions.resetForm();\n    toggleModal();\n  };\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={addTrasactionSchema}\n      >\n        <StyledForm autoComplete=\"off\">\n          <label htmlFor=\"transactionType\">\n            <CheckboxContainter>\n              <MoneyText\n                style={\n                  transactionType === 'income'\n                    ? { color: '#24cca7' }\n                    : { color: '#E0E0E0' }\n                }\n              >\n                Income\n              </MoneyText>\n              <CheckboxField\n                type=\"checkbox\"\n                name=\"money\"\n                onChange={e => isIncomeHandler(e)}\n              />\n\n              <MoneyText\n                style={\n                  transactionType === 'expense'\n                    ? { color: '#FF6596' }\n                    : { color: '#E0E0E0' }\n                }\n              >\n                Expenses\n              </MoneyText>\n            </CheckboxContainter>\n          </label>\n          {transactionType === 'expense' ? (\n            <label htmlFor=\"category\">\n              <CategorySelect name=\"category\" />\n            </label>\n          ) : (\n            ''\n          )}\n          <label htmlFor=\"amount\">\n            <TextField type=\"text\" name=\"amount\" placeholder=\"0.00\" />\n            <ErrorMessage\n              name=\"amount\"\n              render={msg => {\n                toast.error(`${msg}`, { toastId: String(new Date()) });\n              }}\n            />\n          </label>\n          <label htmlFor=\"date\">\n            <DatePicker name=\"date\" />\n          </label>\n          <label htmlFor=\"comment\">\n            <Comment name=\"comment\" placeholder=\"Comment\" minRows={4} />\n          </label>\n          <StyledButton type=\"submit\">Add transaction</StyledButton>\n        </StyledForm>\n      </Formik>\n    </>\n  );\n};\n","import { ModalWindow, Overlay } from './ModalAddTransaction.styled';\nimport { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { StyledButton } from 'components/StyledButton/StyledButton';\nimport { AddTransactionForm } from '../AddTransactionForm/AddTransactionForm';\nimport { Heading } from './ModalAddTransaction.styled';\n\nexport const ModalAddTransaction = ({ toggleModal, isOpen }) => {\n  const modalRoot = document.querySelector('#modal-root');\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        toggleModal();\n      }\n    };\n    if (isOpen) {\n      window.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isOpen, toggleModal]);\n\n  return createPortal(\n    <Overlay>\n      <ModalWindow>\n        <Heading>Add transaction</Heading>\n\n        <AddTransactionForm toggleModal={toggleModal} />\n        <StyledButton type=\"button\" onClick={toggleModal}>\n          Cancel\n        </StyledButton>\n      </ModalWindow>\n    </Overlay>,\n    modalRoot\n  );\n};\n","import PageContainer from 'components/PageContainer/PageContainer';\nimport HomeTab from 'components/HomeTab/HomeTab';\nimport { ButtonCircle } from 'components/ButtonCircle/ButtonCircle';\nimport { ModalAddTransaction } from 'components/ModalAddTransaction/ModalAddTransaction';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleModal } from 'redux/modal/modal-sclice';\n\nconst HomePage = () => {\n  const dispatch = useDispatch();\n  const isModalOpen = useSelector(\n    state => state.global.isAddTransactionModalOpen\n  );\n\n  const onModal = () => {\n    console.log('toggle modal is');\n    dispatch(toggleModal(!isModalOpen));\n  };\n\n  return (\n    <PageContainer>\n      <HomeTab />\n      <ButtonCircle onClick={onModal}>+</ButtonCircle>\n      {isModalOpen && (\n        <ModalAddTransaction toggleModal={onModal} isOpen={isModalOpen} />\n      )}\n    </PageContainer>\n  );\n};\n\nexport default HomePage;\n"],"names":["Background","styled","purpleEllipse","peachEllipse","Backdrop","Container","children","EmptyContainer","Text","baseVars","Categories","id","items","date","length","map","item","data","sort","a","b","split","reverse","join","localeCompare","TransactionContainer","transactionType","category","comment","amount","balance","_id","TransactionList","color","ListItems","TitleItems","TextItems","moment","format","text","tooltip","SumText","style","toFixed","type","borderColor","columns","GeneralContainer","HeadContainer","HeadList","colum","HeadTitles","Header","accessor","BodyContainer","BodyTable","BodyList","BodyItems","SpanSum","getTransactions","transactions","COLUMNS","useState","page","setPage","transactionsPerPage","useMemo","useSelector","result","transactionsTotalQuantity","dispatch","useDispatch","useEffect","fetchTransactions","handleChange","e","totalPages","Math","ceil","totalPagesInteger","Con","queries","small","medium","large","matches","Fragment","Paginate","count","onChange","Pagination","Button","props","theme","buttons","primary","bg","ButtonCircle","onClick","Overlay","ModalWindow","Heading","p","fontWeights","normal","lineHeights","heading","fonts","MainButton","mb","secondary","border","StyledButton","StyledForm","Form","CheckboxContainter","CheckboxField","TextField","Field","muted","MoneyText","StyledComment","TextareaAutosize","radii","borderBottom","Comment","useField","field","minRows","DatePicker","name","useFormikContext","setFieldValue","values","configDatePicker","locale","tomeFormat","value","inputProps","width","outline","marginBottom","paddingLeft","paddingBottom","hadnleChange","dateFormat","timeFormat","closeOnSelect","getCategories","state","categories","CategorySelect","fetchTransactionsCategories","setCategory","FormControl","variant","sx","m","marginRight","marginLeft","fontSize","borderBottomWidth","Select","labelId","event","target","console","log","option","MenuItem","category_id","category_name","AddTransactionForm","toggleModal","initialDate","setTransactonType","initialValues","addTrasactionSchema","Yup","shape","required","max","handleSubmit","actions","rest","addTransaction","resetForm","onSubmit","validationSchema","autoComplete","htmlFor","isChecked","checked","isIncomeHandler","placeholder","render","msg","toast","toastId","String","Date","ModalAddTransaction","isOpen","modalRoot","document","querySelector","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","isModalOpen","global","isAddTransactionModalOpen","onModal","PageContainer"],"sourceRoot":""}