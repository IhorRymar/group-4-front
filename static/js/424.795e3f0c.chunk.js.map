{"version":3,"file":"static/js/424.795e3f0c.chunk.js","mappings":"2PAsGA,EA7FkB,WAEhB,IAAMA,GAAWC,EAAAA,EAAAA,MAKjB,OACE,0BACE,UAAC,KAAD,YACE,SAAC,KAAD,WACE,SAAC,KAAD,WACE,gBAAKC,KAAI,UAAKC,EAAAA,EAAL,qBAIb,SAAC,KAAD,CACCC,cAAe,CACdC,SAAU,GACVC,MAAO,IAETC,gBAAc,EACdC,SAAU,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,WAnBL,SAAC,GAAyB,IAAvBJ,EAAsB,EAAtBA,MAAOD,EAAe,EAAfA,SAC7BL,GAASW,EAAAA,EAAAA,IAAM,CAAEL,MAAAA,EAAOD,SAAAA,IACzB,CAkBMO,CAAaH,GACbC,GACD,EACDG,iBAAkBC,EAAAA,EAVlB,SAYG,gBACCL,EADD,EACCA,OACAM,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,QAEAC,GARD,EAOCR,aAPD,EAQCQ,OARD,OAUC,UAAC,KAAD,YACE,UAAC,KAAD,WACGJ,EAAQV,OAASS,EAAOT,QACxB,SAAC,KAAD,UAAQS,EAAOT,SAEhB,SAAC,KAAD,CACEe,YAAY,SACdC,KAAI,QACJC,KAAI,QACJC,SAAUP,EACVQ,OAAQP,EACRQ,MAAOjB,EAAOH,SAGd,SAAC,KAAD,CAAWqB,MAAM,KAAKC,OAAO,KAA7B,UACE,gBAAK1B,KAAI,UAAKC,EAAAA,EAAL,uBAIb,UAAC,KAAD,WACGa,EAAQX,UAAYU,EAAOV,WAC5B,SAAC,KAAD,UAAQU,EAAOV,YAEf,SAAC,KAAD,CACEgB,YAAY,WACdC,KAAI,WACJC,KAAI,WACJC,SAAUP,EACVQ,OAAQP,EACRQ,MAAOjB,EAAOJ,YAGd,SAAC,KAAD,CAAWsB,MAAM,KAAKC,OAAO,KAA7B,UACE,gBAAK1B,KAAI,UAAKC,EAAAA,EAAL,0BAIb,SAAC,KAAD,CACE0B,UAAWV,IAAYC,EACvBE,KAAI,SAFN,qBAKA,SAAC,KAAD,CACEQ,GAAG,YACHC,MAAO,CAAEC,eAAgB,QAF3B,wBApDH,QA+DV,E,kDC1DD,EAjCkB,WAChB,OACE,SAAC,IAAD,WACE,UAAC,KAAD,YACE,SAAC,IAAD,CAAOC,QAASC,EAAAA,GAAhB,SACG,SAAAC,GAAO,OACN,gCACGA,EAAQC,SACP,UAAC,KAAD,YACE,SAAC,KAAD,CAAKC,IAAKC,EAAWC,IAAI,+JAEzB,SAAC,KAAD,6BAGHJ,EAAQK,UACP,UAAC,KAAD,YACE,SAAC,KAAD,CAAKH,IAAKC,EAAWC,IAAI,+JAEzB,SAAC,KAAD,+BAbA,KAoBV,SAAC,KAAD,WACE,SAAC,EAAD,UAKT,C","sources":["components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Formik } from 'formik'\nimport { Btn, Button , Container, Logotype, Icon, FormaRegistration, Label, Inputicon,Error, Input} from \"./LoginForm.styled\";\nimport {login} from '../../redux/auth/auth-operations'\nimport { loginSchema } from '../../utils/validationsSchemas'\nimport sprite from '../../images/svg/sprite.svg'\n\n\nconst LoginForm = () => {\n\n  const dispatch = useDispatch();\n   const handleSubmit = ({ email, password }) => {\n     dispatch(login({ email, password }));\n   };\n  \n  return (\n    <div>\n      <Container>\n        <Logotype>\n          <Icon>\n            <use href={`${sprite}#icon-logo`}></use>\n          </Icon>\n        </Logotype>\n\n        <Formik\n         initialValues={{\n          password: \"\",\n          email: \"\",\n        }}\n        validateOnBlur\n        onSubmit={(values, { resetForm }) => {\n          handleSubmit(values);\n          resetForm();\n        }}\n        validationSchema={loginSchema}\n      >\n          {({\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            isValid,\n            handleSubmit,\n            dirty,\n          }) => (\n            <FormaRegistration>\n              <Label>\n                {touched.email && errors.email && (\n                 <Error>{errors.email}</Error>\n               )}\n                <Input\n                  placeholder=\"E-mail\"\n                type={`email`}\n                name={`email`}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.email}\n                ></Input>\n\n                <Inputicon width=\"24\" height=\"24\">\n                  <use href={`${sprite}#icon-email`}></use>\n                </Inputicon>\n              </Label>\n\n              <Label>\n                {touched.password && errors.password && (\n                <Error>{errors.password}</Error>\n              )}\n                <Input\n                  placeholder=\"Password\"\n                type={`password`}\n                name={`password`}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.password}\n                ></Input>\n\n                <Inputicon width=\"24\" height=\"24\">\n                  <use href={`${sprite}#icon-password`}></use>\n                </Inputicon>\n              </Label>\n\n              <Btn\n                disabled={!isValid || !dirty}\n                type={`submit`}>\n                LOG IN\n              </Btn>\n              <Button\n                to=\"/register\"\n                style={{ textDecoration: \"none\" }}>\n                REGISTER\n              </Button>\n            </FormaRegistration>\n          )}\n        </Formik>\n      </Container>\n    </div>\n  )\n}\n\nexport default LoginForm\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport Media from 'react-media';\nimport LoginForm from '../../components/LoginForm/LoginForm';\nimport GlobalContainer from '../../container';\nimport { Title, WrapperImg, FormLogin, Img } from './LoginPage.styled';\nimport { Container } from 'pages/RegisterPage/RegisterPage.styled';\nimport { mediaQueries } from '../../utils';\nimport signinImg from '../../images/photo/signin-img.png';\n\nconst LoginPage = () => {\n  return (\n    <GlobalContainer>\n      <Container>\n        <Media queries={mediaQueries}>\n          {matches => (\n            <>\n              {matches.tablet && (\n                <WrapperImg>\n                  <Img src={signinImg} alt=\"Человек с тележкой продуктов\"></Img>\n\n                  <Title>Finance App</Title>\n                </WrapperImg>\n              )}\n              {matches.desktop && (\n                <WrapperImg>\n                  <Img src={signinImg} alt=\"Человек с тележкой продуктов\"></Img>\n\n                  <Title>Finance App</Title>\n                </WrapperImg>\n              )}\n            </>\n          )}\n        </Media>\n\n        <FormLogin>\n          <LoginForm />\n        </FormLogin>\n      </Container>\n    </GlobalContainer>\n  );\n};\n\nexport default LoginPage;\n"],"names":["dispatch","useDispatch","href","sprite","initialValues","password","email","validateOnBlur","onSubmit","values","resetForm","login","handleSubmit","validationSchema","loginSchema","errors","touched","handleChange","handleBlur","isValid","dirty","placeholder","type","name","onChange","onBlur","value","width","height","disabled","to","style","textDecoration","queries","mediaQueries","matches","tablet","src","signinImg","alt","desktop"],"sourceRoot":""}