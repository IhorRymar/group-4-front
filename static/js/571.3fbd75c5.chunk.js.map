{"version":3,"file":"static/js/571.3fbd75c5.chunk.js","mappings":"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","sources":["components/RegisterForm/PasswordStrength.styled.js","components/RegisterForm/PasswordStrength.jsx","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Progress = styled.div`\n  background-color: rgb(224, 224, 224);\n  width: 100%;\n  height: 4px;\n  border-radius: 15px;\n  transition: all 0.5s linear;\n`;\nexport const ProgressBar = styled.div`\n  margin-bottom: auto;\n  @media screen and(max - width: 767px) {\n    margin-left: 10px;\n  }\n`;\nexport const Text = styled.p`\n  font-size: 12px;\n  text-align: end;\n`;\n","import React from 'react'\nimport zxcvbn from 'zxcvbn'\nimport { Progress, Text, ProgressBar } from './PasswordStrength.styled'\n\nconst PasswordStrength = ({ password }) => {\n  const testResult = zxcvbn(password)\n  const num = (testResult.score * 100) / 4\n\n  const funcProgressColor = () => {\n    switch (testResult.score) {\n      case 0:\n        return '#E0E0E0'\n      case 1:\n        return 'red'\n      case 2:\n        return 'orange'\n      case 3:\n        return '#24CCA7'\n      case 4:\n        return '#24CCA7'\n      default:\n        return 'none'\n    }\n  }\n\n  const createPasswordLabel = () => {\n    switch (testResult.score) {\n      case 0:\n        return 'Use a strong password'\n      case 1:\n        return 'Easy password'\n      case 2:\n        return 'Normal password'\n      case 3:\n        return 'A good password'\n      case 4:\n        return 'Safe password!'\n      default:\n        return ''\n    }\n  }\n  const changePasswordColor = () => ({\n    width: `${num}%`,\n    background: funcProgressColor(),\n    height: '7px',\n  })\n  return (\n    <ProgressBar>\n      <Progress style={{ height: '7px' }}>\n        <Progress style={changePasswordColor()}></Progress>\n      </Progress>\n      <Text style={{ color: funcProgressColor() }}>\n        {createPasswordLabel()}\n      </Text>\n    </ProgressBar>\n  )\n}\n\nexport default PasswordStrength\n","import { React } from 'react'\nimport { useDispatch } from 'react-redux'\nimport PasswordStrength from './PasswordStrength'\nimport { Btn, Button , Container, Logotype, Icon, FormaRegistration, Label, Inputicon,Error, Input} from \"../LoginForm/LoginForm.styled\";\nimport { signup } from '../../redux/auth/auth-operations'\nimport { Formik } from 'formik'\nimport { singupSchema } from '../../utils'\nimport sprite from '../../images/svg/sprite.svg'\n\nconst RegisterForm = () => {\n  const initialValues = {\n    name: \"\",\n          password: \"\",\n           confirmPassword: \"\",\n           email: \"\",\n  }\n  //const [password, setPassword] = useState('')\n  const dispatch = useDispatch();\n    const handleSubmit = ({ name, email, password }) => {\n    \n     dispatch(signup({ name, email, password }));\n    };\n  return (\n    <Container>\n      <Logotype>\n        <Icon>\n          <use href={`${sprite}#icon-logo`}></use>\n        </Icon>\n      </Logotype>\n\n      <Formik\n        initialValues={initialValues}\n        validateOnBlur\n        onSubmit={(values, { resetForm }) => {\n          handleSubmit(values);\n          resetForm();\n        }}\n        validationSchema={singupSchema}\n        validateOnChange={false}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          isValid,\n          dirty,\n        }) => (\n          <FormaRegistration>\n            <Label>\n               {touched.email && errors.email && (\n                 <Error>{errors.email}</Error>\n            )}\n              <Input\n                placeholder=\"E-mail\"\n                type=\"email\"\n                name=\"email\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.email}\n              ></Input>\n              <Inputicon width=\"24\" height=\"24\">\n                <use href={`${sprite}#icon-email`}></use>\n              </Inputicon>\n              \n            </Label>\n            <Label>\n              {touched.password && errors.password && (\n                <Error>{errors.password}</Error>\n              )}\n              <Input\n                placeholder=\"Password\"\n                type=\"password\"\n                name=\"password\"\n                error={errors.password}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.password}\n              ></Input>\n              <Inputicon width=\"24\" height=\"24\">\n                <use href={`${sprite}#icon-password`}></use>\n              </Inputicon>\n            </Label>\n\n            <Label>\n              {touched.confirmPassword && errors.confirmPassword && (\n                 <Error>{errors.confirmPassword}</Error>\n              )}\n              <Input\n                placeholder=\"Confirm password\"\n                type=\"password\"\n                name=\"confirmPassword\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.confirmPassword}\n                style={{ marginBottom: \"5px\" }}\n              ></Input>\n              <Inputicon width=\"24\" height=\"24\" >\n                <use href={`${sprite}#icon-password`}></use>\n              </Inputicon>\n            </Label>\n\n            <PasswordStrength password={values.password} />\n            <Label>\n              {touched.name && errors.name && (\n                <Error >{errors.name}</Error>\n              )}\n              <Input\n                placeholder=\"First name\"\n                type=\"text\"\n                 name=\"name\"\n                 onChange={handleChange}\n                 onBlur={handleBlur}\n                value={values.name}\n              ></Input>\n              <Inputicon width=\"24\" height=\"24\">\n                <use href={`${sprite}#icon-account`}></use>\n              </Inputicon>\n            </Label>\n            <Btn\n              disabled={!isValid || !dirty}\n              type=\"submit\"\n            >\n              REGISTER\n            </Btn>\n            <Button\n              to=\"/login\"\n              style={{ textDecoration: \"none\" }}\n            >\n              LOG IN\n            </Button>\n          </FormaRegistration>\n        )}\n      </Formik>\n    </Container>\n  )\n}\n\nexport default RegisterForm\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n ","import {  Container } from \"./RegisterPage.styled\";\nimport { Title, Img, FormLogin, WrapperImg } from \"pages/LoginPage/LoginPage.styled\";\nimport Media from 'react-media'\nimport { mediaQueries } from '../../utils'\nimport  RegisterForm  from '../../components/RegisterForm/RegisterForm';\nimport registerimg from '../../images/photo/register-img.png'\nimport GlobalContainer from '../../container/Container.jsx'\n\nconst RegisterPage = () => {\n  return (\n    <GlobalContainer>\n      <Container>\n         <Media queries={mediaQueries}>\n          {(matches) => (\n            <>\n              {matches.tablet && (\n                <WrapperImg>\n                  <Img\n                    src={registerimg}\n                    alt=\"Человек с тележкой продуктов\"\n                    width=\"274px\"\n                    height=\"250px\"\n                  />\n                  \n                  \n                  <Title>Finance App</Title>\n               </WrapperImg>\n              )}\n              {matches.desktop && (\n                <WrapperImg>\n                  <Img\n                    src={registerimg}\n                    alt=\"Девушка с телефоном в руках\"\n                    width=\"452px\"\n                    height=\"413px\"\n                  />\n                  \n                  <Title>Finance App</Title>\n                </WrapperImg>\n              )}\n            </>\n          )}\n        </Media>\n        \n        \n        <FormLogin>\n          <RegisterForm />\n        </FormLogin>\n      </Container>\n    </GlobalContainer>\n  )\n}\n\nexport default RegisterPage;"],"names":["Progress","styled","ProgressBar","Text","password","testResult","zxcvbn","num","score","funcProgressColor","style","height","width","background","color","createPasswordLabel","dispatch","useDispatch","href","sprite","initialValues","name","confirmPassword","email","validateOnBlur","onSubmit","values","resetForm","signup","handleSubmit","validationSchema","singupSchema","validateOnChange","errors","touched","handleChange","handleBlur","isValid","dirty","placeholder","type","onChange","onBlur","value","error","marginBottom","disabled","to","textDecoration","queries","mediaQueries","matches","tablet","src","registerimg","alt","desktop"],"sourceRoot":""}